{"ast":null,"code":"var _jsxFileName = \"/home/rajan/Desktop/React/app3/src/UseEffectExample.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, userState } from \"react\";\nimport { useState } from \"react/cjs/react.development\";\nimport useMyLog from \"./useMyLog\";\nimport useUserStatus from \"./useUserStatus\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const [value, setValue] = useState(0);\n  const [newvalue, setnewValue] = useState(0); // useMyLog(value);\n\n  const userStatus = useUserStatus(value);\n\n  const onClickHandler = () => {\n    setValue(value + 1);\n  };\n\n  const onNewValueClickHandler = () => {\n    setnewValue(newvalue + 1);\n  }; // useEffect(()=>{\n  //    console.log(\"render\");\n  // });\n  // //useEffect(()=>{\n  //    console.log(\"renderd\");\n  // },[]);//execute bonly once after component is renderd\n  // useEffect(()=>{\n  //     console.log(\"value Updated\");\n  //     return()=>{\n  //         console.log(\"clean up\");\n  //     };\n  // },[value]);\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Use effect Example component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Value:\", value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"NewVlaue:\", newvalue]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickHandler,\n      children: \"Click Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onNewValueClickHandler,\n      children: \"Click me to update new value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true);\n}, \"/fI5CZgJr9xF0VP7G+1TFzkh6l0=\", false, function () {\n  return [useUserStatus];\n});","map":{"version":3,"sources":["/home/rajan/Desktop/React/app3/src/UseEffectExample.js"],"names":["useEffect","userState","useState","useMyLog","useUserStatus","value","setValue","newvalue","setnewValue","userStatus","onClickHandler","onNewValueClickHandler"],"mappings":";;;AAAA,SAAQA,SAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AACA,kBAAe,MAAI;AAAA;;AACf,QAAK,CAACC,KAAD,EAAOC,QAAP,IAAiBJ,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAK,CAACK,QAAD,EAAUC,WAAV,IAAuBN,QAAQ,CAAC,CAAD,CAApC,CAFe,CAGhB;;AACC,QAAMO,UAAU,GAACL,aAAa,CAACC,KAAD,CAA9B;;AAEA,QAAMK,cAAc,GAAC,MAAI;AACrBJ,IAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AACH,GAFD;;AAGA,QAAMM,sBAAsB,GAAC,MAAI;AAC7BH,IAAAA,WAAW,CAACD,QAAQ,GAAC,CAAV,CAAX;AACH,GAFD,CATe,CAYf;AACA;AACA;AACA;AACA;AACC;AAED;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACI;AAAA,4BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAA,2BAAYF,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG,eAGH;AAAA,8BAAeE,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YAHG,eAIH;AAAQ,MAAA,OAAO,EAAEG,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJG,eAKH;AAAQ,MAAA,OAAO,EAAEC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALG;AAAA,kBADJ;AASH,CAnCD;AAAA,UAIqBP,aAJrB;AAAA","sourcesContent":["import {useEffect,userState} from \"react\";\nimport { useState } from \"react/cjs/react.development\";\nimport useMyLog from \"./useMyLog\";\nimport useUserStatus from \"./useUserStatus\";\nexport default ()=>{\n    const[value,setValue]=useState(0);\n    const[newvalue,setnewValue]=useState(0);\n   // useMyLog(value);\n    const userStatus=useUserStatus(value);\n    \n    const onClickHandler=()=>{\n        setValue(value+1);\n    };\n    const onNewValueClickHandler=()=>{\n        setnewValue(newvalue+1);\n    };\n    // useEffect(()=>{\n    //    console.log(\"render\");\n    // });\n    // //useEffect(()=>{\n    //    console.log(\"renderd\");\n     // },[]);//execute bonly once after component is renderd\n     \n    // useEffect(()=>{\n    //     console.log(\"value Updated\");\n    //     return()=>{\n    //         console.log(\"clean up\");\n    //     };\n    // },[value]);\n    \n    return(\n        <>\n     <h1>Use effect Example component</h1>\n     <div>Value:{value}</div>\n     <div>NewVlaue:{newvalue}</div>\n     <button onClick={onClickHandler}>Click Me</button>\n     <button onClick={onNewValueClickHandler}>Click me to update new value</button>\n        </>\n    );\n};"]},"metadata":{},"sourceType":"module"}