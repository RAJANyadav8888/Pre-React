{"ast":null,"code":"var _jsxFileName = \"/home/rajan/Desktop/React/app3/src/HooksSamples.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const [userList, setUserList] = useState([]); // const[name,setName]=useState(\"\");\n  //const[userName,setUserName]=useState(\"\");\n  // const[email,setEmail]=useState(\"\");\n\n  const [isEditMode, setEditMode] = useState(false); // const[userId,setUserId]=useState(0);\n\n  const [nameEditMode, setNameEditMode] = useState(\"\");\n  const [emailEdit, setEmailEditMode] = useState(\"\");\n  const [editObject, setEditObject] = useState({\n    name: \"\",\n    email: \"\"\n  });\n  useEffect(() => {\n    //code to fetch deta from server\n    fetchData();\n  }, []);\n\n  const fetchData = () => {\n    //code to fetch data from server\n    axios.get(\"https://jsonplaceholder.typicode.com/users\").then(response => {\n      console.log(response.data);\n\n      if (response && response.data) {\n        setUserList(response.data);\n      }\n    });\n  };\n\n  const onNameChange = event => {\n    setName(event.target.value);\n  };\n\n  const onUserNameChange = event => {\n    setUserName(event.target.value);\n  };\n\n  const onEmailChange = event => {\n    setEmail(event.target.value);\n  };\n\n  const onDeleteHandler = id => {\n    axios.delete(\"https://jsonplaceholder.typicode.com/users/\" + id).then(response => {\n      console.log(response.data);\n      alert(\"Deleted\"); //fetch the data again\n\n      fetchData(); //reset form\n    });\n  };\n\n  const onFromSubmit = event => {\n    event.preventDefault(); //what is\n\n    console.log(name, userName, email);\n\n    if (!isEditMode) {\n      axios.post(\"https://jsonplaceholder.typicode.com/users\", {\n        name,\n        userName,\n        Id: 1\n      }).then(response => {\n        console.log(response);\n        alert(\"Added\"); //fetch the data again\n\n        fetchData(); //reset form\n\n        setName(\"\");\n        setUserName(\"\");\n        setEmail(\"\");\n      });\n    } else {\n      if (userId > 0) {\n        axios.put(\"https://jsonplaceholder.typicode.com/users/\" + userId, {\n          id: userId,\n          name,\n          userName,\n          userId: 1\n        }).then(response => {\n          if (response) {\n            fetchData();\n            alert(\"updated\");\n            onRest();\n          }\n        });\n      }\n    }\n  };\n\n  const onEdit = userObject => {\n    console.log(userObject);\n    setEditMode(true);\n    setName(userObject.name);\n    setUserName(userObject.userName);\n    setEmail(userObject.email);\n    setUserId(userObject.id);\n  };\n\n  const onRest = event => {\n    if (event) {\n      event.preventDefault();\n    }\n\n    setEditMode(false);\n    setName(\"\");\n    setUserName(\"\");\n    setEmail(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"From HookSample\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User From\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onFromSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        value: name,\n        onChange: onNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"UserName: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"userName\",\n        value: userName,\n        onChange: onUserNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        value: email,\n        onChange: onEmailChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isEditMode ? \"update\" : \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 2\n      }, this), isEditMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onRest,\n        children: \"Rest:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"table table-success table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"UserName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"lat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 2\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 2\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: userList.map((user, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 2\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 2\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 2\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 2\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.address.city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 2\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.address.geo.lat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 2\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: onDeleteHandler,\n              children: \"Delete:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 2\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                onEdit(user);\n              },\n              children: \"Edit:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 2\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 2\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true);\n}, \"OBB2qH1X7rEntv61gFRUrlNLfRc=\");","map":{"version":3,"sources":["/home/rajan/Desktop/React/app3/src/HooksSamples.js"],"names":["axios","useEffect","useState","userList","setUserList","isEditMode","setEditMode","nameEditMode","setNameEditMode","emailEdit","setEmailEditMode","editObject","setEditObject","name","email","fetchData","get","then","response","console","log","data","onNameChange","event","setName","target","value","onUserNameChange","setUserName","onEmailChange","setEmail","onDeleteHandler","id","delete","alert","onFromSubmit","preventDefault","userName","post","Id","userId","put","onRest","onEdit","userObject","setUserId","map","user","index","username","address","city","geo","lat"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\"\n\n\n\n\n export default () =>{\n const[userList,setUserList]=useState([]);\n// const[name,setName]=useState(\"\");\n //const[userName,setUserName]=useState(\"\");\n// const[email,setEmail]=useState(\"\");\n const[isEditMode,setEditMode]=useState(false);\n// const[userId,setUserId]=useState(0);\n const[nameEditMode,setNameEditMode]=useState(\"\");\n     const [emailEdit,setEmailEditMode]=useState(\"\");\n     const [editObject,setEditObject]=useState({\n         name:\"\",\n         email:\"\",\n     });\n\n\n useEffect(() =>{\n //code to fetch deta from server\n fetchData();\n },[]\n \n );\n const fetchData =() =>{\n //code to fetch data from server\n axios.get(\"https://jsonplaceholder.typicode.com/users\").then((response)=>{\n console.log(response.data);\n if(response && response.data){\n setUserList(response.data);\n }\n });\n };\n\n const onNameChange =(event) =>{\n setName(event.target.value);\n };\n const onUserNameChange =(event) =>{\n setUserName(event.target.value);\n };\n\n const onEmailChange =(event) =>{\n setEmail(event.target.value);\n};\nconst onDeleteHandler=(id)=>{\n \n \n axios.delete(\"https://jsonplaceholder.typicode.com/users/\"+id).then((response) =>{\n console.log(response.data);\n alert(\"Deleted\");\n //fetch the data again\n fetchData();\n //reset form\n \n });\n};\n\nconst onFromSubmit =(event) =>{\n event.preventDefault();//what is\n console.log(name,userName,email);\n if(!isEditMode){\n axios.post(\"https://jsonplaceholder.typicode.com/users\",{\n name,\n userName,\n Id:1,\n }).then((response) =>{\n console.log(response);\n alert(\"Added\");\n //fetch the data again\n fetchData();\n //reset form\n setName(\"\");\n setUserName(\"\");\n setEmail(\"\");\n });\n}else{\n if(userId >0){\n axios.put(\"https://jsonplaceholder.typicode.com/users/\"+userId,{\n id:userId,\n name,\n userName,\n userId:1,\n }).then((response) =>{\n if(response){\n fetchData();\n alert(\"updated\");\n onRest();\n }\n });\n }\n }\n }\n const onEdit =(userObject) =>{\n console.log(userObject);\n setEditMode(true);\n setName(userObject.name);\n setUserName(userObject.userName);\n setEmail(userObject.email);\n setUserId(userObject.id);\n \n };\n\n const onRest=(event) =>{\n if (event){\n event.preventDefault();\n }\n setEditMode(false);\n setName(\"\");\n setUserName(\"\");\n setEmail(\"\");\n };\n\n \n\n\nreturn(\n <>\n <h1>From HookSample</h1>\n <h1>User From</h1>\n <form onSubmit={onFromSubmit}>\n <label> Name: </label>\n <input name=\"name\" value={name} onChange={onNameChange}/>\n \n <label>UserName: </label>\n <input name=\"userName\" value={userName} onChange={onUserNameChange}/>\n\n <label>Email: </label>\n <input name=\"email\" value={email} onChange={onEmailChange}/>\n <button type=\"submit\">{isEditMode ? \"update\" : \"submit\"}</button>\n {isEditMode && <button onClick={onRest}>Rest:</button>}\n </form>\n <table class=\"table table-success table-striped\">\n <thead>\n <tr>\n <th>ID</th>\n <th>Name</th>\n <th>UserName</th>\n <th>Email</th>\n <th>City</th>\n <th>lat</th>\n <th>Option</th>\n \n </tr>\n \n </thead>\n <tbody>\n {userList.map((user,index) =>{\n return(\n <tr key={user.id}>\n <td>{user.id}</td>\n <td>{user.name}</td>\n <td>{user.username}</td>\n <td>{user.email}</td>\n <td>{user.address.city}</td>\n <td>{user.address.geo.lat}</td>\n <button onClick={onDeleteHandler}>Delete:</button>\n <button onClick={()=>{\n onEdit(user)\n }}>Edit:</button>\n </tr>\n \n );\n })}\n </tbody>\n </table>\n </>\n);\n \n\n\n }\n"]},"metadata":{},"sourceType":"module"}