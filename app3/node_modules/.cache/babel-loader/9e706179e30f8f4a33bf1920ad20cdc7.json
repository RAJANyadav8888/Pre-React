{"ast":null,"code":"var _jsxFileName = \"/home/rajan/Desktop/React/app3/src/HooksSample.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const [postList, setPostList] = useState([]); //  const[title,setTitle]=useState(\"\");\n  //  const[body,setBody]=useState(\"\");\n\n  const [postObject, setPostObject] = useState(\"\");\n  const [isEditMode, setEditMode] = useState(false);\n  const [postId, setPostId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(-1); //  const[titleEditMode,setTitleEditMode]=useState(\"\");\n\n  const [bodyEdit, setBodyEditMode] = useState(\"\");\n  const [editObject, setEditObject] = useState({\n    title: \"\",\n    body: \"\"\n  });\n  useEffect(() => {\n    //code to fetch deta from server\n    fetchData();\n  }, []);\n\n  const fetchData = () => {\n    //code to fetch data from server\n    axios.get(\"https://jsonplaceholder.typicode.com/posts\").then(response => {\n      console.log(response.data);\n\n      if (response && response.data) {\n        setPostList(response.data);\n      }\n    });\n  }; //  const onTitleChange =(event) =>{\n  //      setTitle(event.target.value);\n  //  };\n  //  const onBodyChange =(event) =>{\n  //     setBody(event.target.value);\n  // };\n  // const onDelete =(event) =>{\n  //     setBody(event.target.value);\n  // };\n  // const onTitleEditMode =(event) =>{\n  //     setTitleEditMode(event.target.value);\n  // };\n\n\n  const onBodyEditMode = event => {\n    setBodyEditMode(event.target.value);\n  };\n\n  const onEditObjectChangeHandler = event => {\n    //   const titleold={\n    //       title:\"a\",\n    //       body:\"b\",\n    //   };\n    //     const tileNew={\n    //         title:titleold.title,\n    //         body:titleold.body,\n    //         ...titleold,\n    //         title:\"c\",\n    //     };\n    if (event) {\n      const {\n        name,\n        value\n      } = event.target;\n      setEditObject({ ...editObject,\n        [name]: value\n      });\n    }\n\n    ;\n  };\n\n  const onPostObjectChangeHandler = event => {\n    if (event) {\n      const {\n        name,\n        value\n      } = event.target;\n      setPostObject({ ...postObject,\n        [name]: value\n      });\n    }\n  };\n\n  const onFromSubmit = event => {\n    event.preventDefault(); //what is\n    //  console.log(title,body);\n\n    if (!isEditMode) {\n      axios.post(\"https://jsonplaceholder.typicode.com/posts\", { ...postObject,\n        userId: 1\n      }).then(response => {\n        console.log(response);\n        alert(\"Added\"); //fetch the data again\n\n        fetchData(); //reset form\n        // setTitle(\"\");\n        // setBody(\"\");\n\n        setPostObject({\n          title: \"\",\n          body: \"\"\n        });\n      });\n    } //else{\n    // if(postId >0){\n    //     axios.put(\"https://jsonplaceholder.typicode.com/posts/\"+postId,{\n    //         id:postId,\n    //         // title,\n    //         // body,\n    //         ...postObject,\n    //         userId:1,\n    //     }).then((response) =>{\n    //         if(response){\n    //             fetchData();\n    //             alert(\"updated\");\n    //             onRest();\n    //         }\n    //         });\n    //     }\n    // }\n\n  };\n\n  const onDeleteHandler = id => {\n    axios.delete(\"https://jsonplaceholder.typicode.com/posts/\" + id).then(response => {\n      console.log(response);\n      alert(\"Deleted\");\n      fetchData();\n    });\n  };\n\n  const onEdit = postObject => {\n    console.log(postObject); //   setEditMode(true);\n    //   setTitle(postObject.title);\n    //   setBody(postObject.body);\n    //   setPostId(postObject.id);\n\n    setSelectedPostId(postObject.id); //   setTitleEditMode(postObject.title);\n    //   setBodyEditMode(postObject.body);\n\n    setEditObject({ ...postObject\n    });\n  };\n\n  const onRest = event => {\n    if (event) {\n      event.preventDefault();\n    }\n\n    setEditMode(false);\n    setPostObject({\n      title: \"\",\n      body: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"From HookSample\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Post From\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onFromSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Title: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"title\",\n        value: postObject.title,\n        onChange: onPostObjectChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Body: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"body\",\n        value: postObject.body,\n        onChange: onPostObjectChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isEditMode ? \"update\" : \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 16\n      }, this), isEditMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onRest,\n        children: \"Rest:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Body\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: postList.map((post, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: post.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedPostId === post.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"title\",\n                value: editObject.title,\n                onChange: onEditObjectChangeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 63\n              }, this) : post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedPostId === post.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"body\",\n                value: editObject.body,\n                onChange: onEditObjectChangeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 63\n              }, this) : post.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedPostId === post.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 35\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  children: \"Reset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 34\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => onDeleteHandler(post.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 34\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    onEdit(post);\n                  },\n                  children: \"Edit:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 34\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 30\n            }, this)]\n          }, post.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 26\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n}, \"yqPo1cy2q7VyUDXZ2nucrHB7nLg=\");","map":{"version":3,"sources":["/home/rajan/Desktop/React/app3/src/HooksSample.js"],"names":["axios","useEffect","useState","postList","setPostList","postObject","setPostObject","isEditMode","setEditMode","postId","setPostId","selectedPostId","setSelectedPostId","bodyEdit","setBodyEditMode","editObject","setEditObject","title","body","fetchData","get","then","response","console","log","data","onBodyEditMode","event","target","value","onEditObjectChangeHandler","name","onPostObjectChangeHandler","onFromSubmit","preventDefault","post","userId","alert","onDeleteHandler","id","delete","onEdit","onRest","map","index"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\"\n\n export default () =>{\n     const[postList,setPostList]=useState([]);\n    //  const[title,setTitle]=useState(\"\");\n    //  const[body,setBody]=useState(\"\");\n     const[postObject,setPostObject]=useState(\"\");\n     const[isEditMode,setEditMode]=useState(false);\n     const[postId,setPostId]=useState(0);\n     const[selectedPostId,setSelectedPostId]=useState(-1);\n    //  const[titleEditMode,setTitleEditMode]=useState(\"\");\n     const[bodyEdit,setBodyEditMode]=useState(\"\");\n     const[editObject,setEditObject]=useState({\n         title:\"\",\n         body:\"\",\n     });\n\n\n     useEffect(() =>{\n        //code to fetch deta from server\n       fetchData();\n     },[]\n      \n     );\n     const fetchData =() =>{\n         //code to fetch data from server\n         axios.get(\"https://jsonplaceholder.typicode.com/posts\").then((response)=>{\n            console.log(response.data);\n            if(response && response.data){\n                setPostList(response.data);\n            }\n        });\n     };\n\n    //  const onTitleChange =(event) =>{\n    //      setTitle(event.target.value);\n    //  };\n    //  const onBodyChange =(event) =>{\n    //     setBody(event.target.value);\n    // };\n    // const onDelete =(event) =>{\n    //     setBody(event.target.value);\n    // };\n    // const onTitleEditMode =(event) =>{\n    //     setTitleEditMode(event.target.value);\n    // };\n\n    const onBodyEditMode =(event) =>{\n        setBodyEditMode(event.target.value);\n    };\n      const onEditObjectChangeHandler =(event) =>{\n        //   const titleold={\n        //       title:\"a\",\n        //       body:\"b\",\n        //   };\n\n        \n        //     const tileNew={\n        //         title:titleold.title,\n        //         body:titleold.body,\n        //         ...titleold,\n        //         title:\"c\",\n        //     };\n          \n        if(event){\n            const{name,value}=event.target;\n            setEditObject({\n                ...editObject,\n                [name]:value,\n            });\n        };\n\n\n\n      }\n\n      const onPostObjectChangeHandler=(event)=>{\n        if(event){\n            const{name,value}=event.target;\n            setPostObject({\n                ...postObject,\n                [name]:value,\n            });\n        }\n\n      };\n    const onFromSubmit =(event) =>{\n         event.preventDefault();//what is\n    //  console.log(title,body);\n        if(!isEditMode){\n        axios.post(\"https://jsonplaceholder.typicode.com/posts\",{\n           ...postObject,\n            userId:1,\n        }).then((response) =>{\n            console.log(response);\n            alert(\"Added\");\n            //fetch the data again\n            fetchData();\n            //reset form\n            // setTitle(\"\");\n            // setBody(\"\");\n            setPostObject({\n                title:\"\",\n                body:\"\",\n\n\n            });\n        });\n     } //else{\n    // if(postId >0){\n    //     axios.put(\"https://jsonplaceholder.typicode.com/posts/\"+postId,{\n    //         id:postId,\n    //         // title,\n    //         // body,\n\n    //         ...postObject,\n    //         userId:1,\n    //     }).then((response) =>{\n    //         if(response){\n    //             fetchData();\n    //             alert(\"updated\");\n    //             onRest();\n    //         }\n    //         });\n    //     }\n    // }\n    }\n\n    const onDeleteHandler =(id)=>{\n        \n            axios.delete(\"https://jsonplaceholder.typicode.com/posts/\"+id).then((response)=>{\n            console.log(response);\n            alert(\"Deleted\");\n            fetchData();\n        })\n    }\n      const onEdit =(postObject) =>{\n          console.log(postObject);\n        //   setEditMode(true);\n        //   setTitle(postObject.title);\n        //   setBody(postObject.body);\n        //   setPostId(postObject.id);\n          setSelectedPostId(postObject.id);\n        //   setTitleEditMode(postObject.title);\n        //   setBodyEditMode(postObject.body);\n          setEditObject({\n              ...postObject,\n          })\n      };\n      \n      \n      const onRest=(event) =>{\n          if (event){\n              event.preventDefault();\n            }\n          setEditMode(false);\n          setPostObject({\n            title:\"\",\n            body:\"\",\n\n\n        });\n      };\n     return(\n         <>\n         <h1>From HookSample</h1>\n         <h1>Post From</h1>\n         <form onSubmit={onFromSubmit}>\n         <label> Title: </label>\n             <input name=\"title\" value={postObject.title} onChange={onPostObjectChangeHandler}/>\n       \n            <label>Body: </label>\n               <input name=\"body\" value={postObject.body} onChange={onPostObjectChangeHandler}/>\n\n               <button type=\"submit\">{isEditMode ? \"update\" : \"submit\"}</button>\n               {isEditMode && <button onClick={onRest}>Rest:</button>}\n         </form>\n         <table className={\"table\"}>\n             <thead>\n                 <tr>\n                     <th>ID</th>\n                     <th>Title</th>\n                     <th>Body</th>\n                 </tr>\n                \n             </thead>\n             <tbody>\n                 {postList.map((post,index) =>{\n                     return(\n                         <tr key={post.id}>\n                             <td>{post.id}</td>\n                             <td>{selectedPostId===post.id ? (<input name=\"title\" value={editObject.title} onChange={onEditObjectChangeHandler}/>\n                             ):(\n                                 post.title\n                             )}</td>\n                             <td>{selectedPostId===post.id ? (<input name=\"body\" value={editObject.body} onChange={onEditObjectChangeHandler}/>):(\n                                 post.body\n                             )}\n                             </td>\n                             <td>\n                                 {selectedPostId===post.id ?\n                                  (<>\n                                  <button>Update</button>\n                                 <button>Reset</button>\n                                 </>\n                                 ) \n                                 :(\n                                 <>\n                                 <button onClick={()=>\n                                 onDeleteHandler(post.id)}>\n                                     Delete\n                                 </button>\n                                 <button onClick={()=>{\n                                onEdit(post)\n                              }}>Edit:</button>\n\n                                 \n                                 </>\n                                 )}\n                                 </td>\n                             {/* <button onClick={onDeleteHandler}>Delete:</button>\n                         \n                              <button onClick={()=>{\n                                onEdit(post)\n                              }}>Edit:</button>\n                              </tr> */}\n                              </tr>\n                     );\n                 })}\n             </tbody>\n         </table>\n         </>\n     );\n        \n    \n};"]},"metadata":{},"sourceType":"module"}