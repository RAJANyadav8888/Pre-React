{"ast":null,"code":"var _jsxFileName = \"/home/rajan/Desktop/React/app3/src/HooksSamples.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const [userList, setUserList] = useState([]); // const[name,setName]=useState(\"\");\n  // const[userName,setUserName]=useState(\"\");\n  // const[email,setEmail]=useState(\"\");\n\n  const [userObject, setUserObject] = useState(\"\");\n  const [isEditMode, setEditMode] = useState(false);\n  const [userId, setUserId] = useState(0);\n  const [selectedUserId, setSelectedUserId] = useState(-1);\n  const [userNameEdit, setUserNameEditMode] = useState(\"\");\n  const [emailEdit, setEmailEditMode] = useState(\"\");\n  const [editObject, setEditObject] = useState({\n    name: \"\",\n    userName: \"\",\n    email: \"\"\n  });\n  useEffect(() => {\n    //code to fetch deta from server\n    fetchData();\n  }, []);\n\n  const fetchData = () => {\n    //code to fetch data from server\n    axios.get(\"https://jsonplaceholder.typicode.com/users\").then(response => {\n      console.log(response.data);\n\n      if (response && response.data) {\n        setUserList(response.data);\n      }\n    });\n  }; //     const onNameChange =(event) =>{\n  //         setName(event.target.value);\n  //     };\n  //     const onUserNameChange =(event) =>{\n  //         setUserName(event.target.value);\n  //    };\n  //    const onEmailChange =(event) =>{\n  //     setEmail(event.target.value);\n  // };\n  // const onUserNameEditMode =() =>{\n  //     setUserNameEditMode(event.target.value);\n  // }\n  // const onEmailEditMode =() =>{\n  //     setEmailEditMode(event.target.value);\n  // }\n\n\n  const onEditObjectChangeHandler = event => {\n    if (event) {\n      const {\n        name,\n        value\n      } = event.target;\n      setEditObject({ ...editObject,\n        [name]: value\n      });\n    }\n\n    ;\n  };\n\n  const onUserObjectChangeHandler = event => {\n    if (event) {\n      const {\n        name,\n        value\n      } = event.target;\n      setUserObject({ ...userObject,\n        [name]: value\n      });\n    }\n  };\n\n  const onDeleteHandler = id => {\n    axios.delete(\"https://jsonplaceholder.typicode.com/users/\" + id).then(response => {\n      console.log(response.data);\n      alert(\"Deleted\"); //fetch the data again\n\n      fetchData(); //reset form\n    });\n  };\n\n  const onFromSubmit = event => {\n    event.preventDefault(); //what is\n    // console.log(name,userName,email);\n\n    if (!isEditMode) {\n      axios.post(\"https://jsonplaceholder.typicode.com/users\", { ...userObject,\n        Id: 1\n      }).then(response => {\n        console.log(response);\n        alert(\"Added\"); //fetch the data again\n\n        fetchData(); //reset form\n        // setName(\"\");\n        // setUserName(\"\");\n        // setEmail(\"\");\n\n        setUserObject({\n          name: \"\",\n          userName: \"\",\n          email: \"\"\n        });\n      });\n    } // else{\n    //     if(userId >0){\n    //        axios.put(\"https://jsonplaceholder.typicode.com/users/\"+userId,{\n    //            id:userId,\n    //            name,\n    //         userName,\n    //            userId:1,\n    //        }).then((response) =>{\n    //            if(response){\n    //                fetchData();\n    //                alert(\"updated\");\n    //                onRest();\n    //            }\n    //            });\n    //        }\n    //     }\n\n  };\n\n  const onEdit = userObject => {\n    console.log(userObject); //     setEditMode(true);\n    //     setName(userObject.name);\n    //     setUserName(userObject.userName);\n    //     setEmail(userObject.email);\n    //    setUserId(userObject.id);\n\n    setSelectedUserId(userObject.id);\n    setEditObject({ ...userObject\n    });\n  };\n\n  const onRest = event => {\n    if (event) {\n      event.preventDefault();\n    }\n\n    setEditMode(false); // setName(\"\");\n    // setUserName(\"\");\n    // setEmail(\"\");\n\n    setUserObject({\n      name: \"\",\n      userName: \"\",\n      email: \"\"\n    });\n  };\n\n  const onRestEditRow = () => {\n    setSelectedUserId(-1);\n    setEditObject({\n      name: \"\",\n      userName: \"\",\n      email: \"\"\n    });\n  };\n\n  const onUpdateResetRow = () => {\n    if (selectedUserId > 0) {\n      axios.put(\"https://jsonplaceholder.typicode.com/users/\" + selectedUserId, {\n        id: selectedUserId,\n        //    name,\n        // userName,\n        ...editObject,\n        userId: 1\n      }).then(response => {\n        if (response) {\n          fetchData();\n          alert(\"updated\");\n          onRestEditRow();\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"From HookSample\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User From\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onFromSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        value: userObject.name,\n        onChange: onUserObjectChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"UserName: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"userName\",\n        value: userObject.userName,\n        onChange: onUserObjectChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        value: userObject.email,\n        onChange: onUserObjectChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isEditMode ? \"update\" : \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this), isEditMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onRest,\n        children: \"Rest:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"table table-success table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"UserName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: userList.map((user, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedUserId === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"name\",\n                value: editObject.name,\n                onChange: onEditObjectChangeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 58\n              }, this) : user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedUserId === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"userName\",\n                value: editObject.userName,\n                onChange: onEditObjectChangeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 58\n              }, this) : user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedUserId === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"email\",\n                value: editObject.email,\n                onChange: onEditObjectChangeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 58\n              }, this) : user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedUserId === user.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: onUpdateResetRow,\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 35\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: onRestEditRow,\n                  children: \"Reset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 34\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => onDeleteHandler(user.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 34\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    onEdit(user);\n                  },\n                  children: \"Edit:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 34\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 30\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}, \"Ws7vuWQYLmn/e1jl0l/lBD1u8J4=\");","map":{"version":3,"sources":["/home/rajan/Desktop/React/app3/src/HooksSamples.js"],"names":["axios","useEffect","useState","userList","setUserList","userObject","setUserObject","isEditMode","setEditMode","userId","setUserId","selectedUserId","setSelectedUserId","userNameEdit","setUserNameEditMode","emailEdit","setEmailEditMode","editObject","setEditObject","name","userName","email","fetchData","get","then","response","console","log","data","onEditObjectChangeHandler","event","value","target","onUserObjectChangeHandler","onDeleteHandler","id","delete","alert","onFromSubmit","preventDefault","post","Id","onEdit","onRest","onRestEditRow","onUpdateResetRow","put","map","user","index","username"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\"\n\n\n\n\n export default () =>{\n    const[userList,setUserList]=useState([]);\n    // const[name,setName]=useState(\"\");\n    // const[userName,setUserName]=useState(\"\");\n    // const[email,setEmail]=useState(\"\");\n    const[userObject,setUserObject]=useState(\"\");\n    const[isEditMode,setEditMode]=useState(false);\n    const[userId,setUserId]=useState(0);\n    const[selectedUserId,setSelectedUserId]=useState(-1);\n     const[userNameEdit,setUserNameEditMode]=useState(\"\");\n     const[emailEdit,setEmailEditMode]=useState(\"\");\n     const[editObject,setEditObject]=useState({\n         name:\"\",\n         userName:\"\",\n         email:\"\",\n     })\n\n    useEffect(() =>{\n        //code to fetch deta from server\n       fetchData();\n     },[]\n      \n     );\n     const fetchData =() =>{\n        //code to fetch data from server\n        axios.get(\"https://jsonplaceholder.typicode.com/users\").then((response)=>{\n           console.log(response.data);\n           if(response && response.data){\n            setUserList(response.data);\n           }\n       });\n    };\n\n//     const onNameChange =(event) =>{\n//         setName(event.target.value);\n//     };\n//     const onUserNameChange =(event) =>{\n//         setUserName(event.target.value);\n//    };\n\n//    const onEmailChange =(event) =>{\n//     setEmail(event.target.value);\n// };\n\n// const onUserNameEditMode =() =>{\n//     setUserNameEditMode(event.target.value);\n// }\n\n// const onEmailEditMode =() =>{\n//     setEmailEditMode(event.target.value);\n// }\n\nconst onEditObjectChangeHandler =(event) =>{\n    if(event){\n        const{name,value}=event.target;\n        setEditObject({\n            ...editObject,\n            [name]:value,\n        });\n    };\n}\n\n const onUserObjectChangeHandler =(event) =>\n {\n     if(event){\n         const{name,value}=event.target;\n         setUserObject({\n             ...userObject,\n             [name]:value,\n         });\n     }\n};\nconst onDeleteHandler=(id)=>{\n   \n  \n    axios.delete(\"https://jsonplaceholder.typicode.com/users/\"+id).then((response) =>{\n        console.log(response.data);\n        alert(\"Deleted\");\n        //fetch the data again\n        fetchData();\n        //reset form\n        \n    });\n};\n\nconst onFromSubmit =(event) =>{\n    event.preventDefault();//what is\n    // console.log(name,userName,email);\n    if(!isEditMode){\n    axios.post(\"https://jsonplaceholder.typicode.com/users\",{\n        ...userObject,\n        \n        Id:1,\n    }).then((response) =>{\n        console.log(response);\n        alert(\"Added\");\n        //fetch the data again\n        fetchData();\n        //reset form\n        // setName(\"\");\n        // setUserName(\"\");\n        // setEmail(\"\");\n        setUserObject({\n            name:\"\",\n            userName:\"\",\n            email:\"\",\n        })\n    });\n}\n// else{\n//     if(userId >0){\n//        axios.put(\"https://jsonplaceholder.typicode.com/users/\"+userId,{\n//            id:userId,\n//            name,\n//         userName,\n//            userId:1,\n//        }).then((response) =>{\n//            if(response){\n//                fetchData();\n//                alert(\"updated\");\n//                onRest();\n//            }\n//            });\n//        }\n//     }\n    }\n    const onEdit =(userObject) =>{\n        console.log(userObject);\n    //     setEditMode(true);\n    //     setName(userObject.name);\n    //     setUserName(userObject.userName);\n    //     setEmail(userObject.email);\n    //    setUserId(userObject.id);\n    setSelectedUserId(userObject.id);\n\n    setEditObject({\n        ...userObject,\n    })\n       \n    };\n\n    const onRest=(event) =>{\n        if (event){\n            event.preventDefault();\n          }\n        setEditMode(false);\n        // setName(\"\");\n        // setUserName(\"\");\n        // setEmail(\"\");\n        setUserObject({\n            name:\"\",\n            userName:\"\",\n            email:\"\",\n        })\n    };\n\n    const onRestEditRow=()=>{\n        setSelectedUserId(-1);\n        setEditObject({\n            name:\"\",\n            userName:\"\",\n            email:\"\",\n        });\n    };\n\n const onUpdateResetRow=() =>{\n     if(selectedUserId>0)\n     {\n     axios.put(\"https://jsonplaceholder.typicode.com/users/\"+selectedUserId,{\n                   id:selectedUserId,\n                //    name,\n                // userName,\n                ...editObject,\n                   userId:1,\n               }).then((response) =>{\n                   if(response){\n                       fetchData();\n                       alert(\"updated\");\n                       onRestEditRow();\n                   }\n                   });\n               }\n            }\n        \n\n\nreturn(\n    <>\n    <h1>From HookSample</h1>\n    <h1>User From</h1>\n    <form onSubmit={onFromSubmit}>\n    <label> Name: </label>\n        <input name=\"name\" value={userObject.name} onChange={onUserObjectChangeHandler}/>\n  \n       <label>UserName: </label>\n          <input name=\"userName\" value={userObject.userName} onChange={onUserObjectChangeHandler}/>\n\n          <label>Email: </label>\n          <input name=\"email\" value={userObject.email} onChange={onUserObjectChangeHandler}/>\n          <button type=\"submit\">{isEditMode ? \"update\" : \"submit\"}</button>\n               {isEditMode && <button onClick={onRest}>Rest:</button>}\n    </form>\n    <table  class=\"table table-success table-striped\">\n        <thead>\n            <tr>\n                <th>ID</th>\n                <th>Name</th>\n                <th>UserName</th>\n                <th>Email</th>\n                {/* <th>City</th>\n                <th>lat</th>\n                <th>Option</th> */}\n               \n            </tr>\n           \n        </thead>\n        <tbody>\n            {userList.map((user,index) =>{\n                return(\n                    <tr key={user.id}>\n                        <td>{user.id}</td>\n                        <td>{selectedUserId===user.id ? (<input name=\"name\" value={editObject.name}\n                        onChange={onEditObjectChangeHandler}/>):(\n                            user.name)}</td>\n                        <td>{selectedUserId===user.id ? (<input name=\"userName\" value={editObject.userName}\n                        onChange={onEditObjectChangeHandler}/>):(\n                            user.username)}</td>\n                        <td>{selectedUserId===user.id ? (<input name=\"email\" value={editObject.email}\n                        onChange={onEditObjectChangeHandler}/>):(\n                            user.email)}</td>\n\n                             <td>\n                                 {selectedUserId===user.id ?\n                                  (<>\n                                  <button onClick={onUpdateResetRow}>Update</button>\n                                 <button onClick={onRestEditRow}>Reset</button>\n                                 </>\n                                 ) \n                                 :(\n                                 <>\n                                 <button onClick={()=>\n                                 onDeleteHandler(user.id)}>\n                                     Delete\n                                 </button>\n                                 <button onClick={()=>{\n                                onEdit(user)\n                              }}>Edit:</button>\n\n                                 \n                                 </>\n                                 )}\n                                 </td>\n\n                        {/* <td>{user.address.city}</td>\n                        <td>{user.address.geo.lat}</td> */}\n                        {/* <button onClick={onDeleteHandler}>Delete:</button>\n                        <button onClick={()=>{\n                                onEdit(user)\n                              }}>Edit:</button> */}\n                        </tr>\n                        \n                );\n            })}\n        </tbody>\n    </table>\n    </>\n);\n   \n\n\n }"]},"metadata":{},"sourceType":"module"}