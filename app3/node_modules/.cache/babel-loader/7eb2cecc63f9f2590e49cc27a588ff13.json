{"ast":null,"code":"var _jsxFileName = \"/home/rajan/Desktop/React/app3/src/HooksSample.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const [postsList, setPostsList] = useState([]);\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [titleEditMode, setTitleEditMode] = useState(\"\");\n  const [postId, setPostId] = useState(0);\n  const [selectPostId, setSelectPostId] = useState(-1);\n\n  const fetchData = () => {\n    //code TO fetch the datat from the server\n    axios.get('https://jsonplaceholder.typicode.com/posts').then(response => {\n      if (response && response.data) {\n        setPostsList(response.data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const onTitleChange = event => {\n    setTitle(event.target.value);\n  };\n\n  const onTitleEditModeChange = event => {\n    setTitleEditMode(event.target.value);\n  };\n\n  const onBodyChange = event => {\n    setBody(event.target.value);\n  };\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n    console.log(title, body);\n\n    if (!isEditMode) {\n      axios.post('https://jsonplaceholder.typicode.com/posts', {\n        title,\n        body,\n        userId: 1\n      }).then(response => {\n        console.log(response);\n        alert('Addded'); //fetch the data again\n\n        fetchData(); //reset form\n\n        setTitle('');\n        setBody('');\n      });\n    } else {\n      if (postId > 0) {\n        axios.put('https://jsonplaceholder.typicode.com/posts/' + postId, {\n          id: postId,\n          title,\n          body,\n          userId: 1\n        }).then(response => {\n          if (response) {\n            fetchData();\n            alert('UPdated');\n            onReset();\n          }\n        });\n      }\n    }\n  };\n\n  const onDeleteHandler = id => {\n    axios.delete('https://jsonplaceholder.typicode.com/posts/' + id).then(response => {\n      console.log(response.data);\n\n      if (response) {\n        fetchData();\n        alert('Deleted');\n      }\n    });\n  };\n\n  const onEditHandler = postObject => {\n    console.log(postObject);\n    setIsEditMode(true);\n    setTitle(postObject.title); // setBody(postObject.body);\n\n    setPostId(postObject.id);\n    setSelectPostId(postObject.id);\n    setTitleEditMode(postObject, title);\n  };\n\n  const onReset = event => {\n    if (event) {\n      event.preventDefault();\n    }\n\n    setIsEditMode(false);\n    setTitle('');\n    setBody('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Form HooksSample\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Post Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"title\",\n        value: title,\n        onChange: onTitleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"body\",\n        value: body,\n        onChange: onBodyChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isEditMode ? 'Update' : 'Submit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), isEditMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Body\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: postsList.map((post, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: post.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectPostId === post.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                value: titleEditMode,\n                onChange: onTitleEditModeChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 21\n              }, this) : post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectPostId === post.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                value: body,\n                onChange: onBodyChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 21\n              }, this) : post.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  onDeleteHandler(post.id);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  onEditHandler(post);\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this)]\n          }, post.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}, \"l8fal6HpDsG3akD/zeWjPlqytB4=\");","map":{"version":3,"sources":["/home/rajan/Desktop/React/app3/src/HooksSample.js"],"names":["axios","useEffect","useState","postsList","setPostsList","title","setTitle","body","setBody","isEditMode","setIsEditMode","titleEditMode","setTitleEditMode","postId","setPostId","selectPostId","setSelectPostId","fetchData","get","then","response","data","onTitleChange","event","target","value","onTitleEditModeChange","onBodyChange","onFormSubmit","preventDefault","console","log","post","userId","alert","put","id","onReset","onDeleteHandler","delete","onEditHandler","postObject","map","index"],"mappings":"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","sourcesContent":["\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\n\nexport default () => {\n  const [postsList, setPostsList] = useState([]);\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [titleEditMode,setTitleEditMode]=useState(\"\");\n  const [postId, setPostId] = useState(0);\n  const [selectPostId, setSelectPostId] = useState(-1);\n  const fetchData = () => {\n    //code TO fetch the datat from the server\n\n    axios.get('https://jsonplaceholder.typicode.com/posts').then((response) => {\n      if (response && response.data) {\n        setPostsList(response.data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const onTitleChange = (event) => {\n    setTitle(event.target.value);\n  };\n\n\n  const onTitleEditModeChange = (event) => {\n    setTitleEditMode(event.target.value);\n  };\n\n  const onBodyChange = (event) => {\n    setBody(event.target.value);\n  };\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    console.log(title, body);\n    if (!isEditMode) {\n      axios\n        .post('https://jsonplaceholder.typicode.com/posts', {\n          title,\n          body,\n          userId: 1,\n        })\n        .then((response) => {\n          console.log(response);\n          alert('Addded');\n          //fetch the data again\n          fetchData();\n          //reset form\n          setTitle('');\n          setBody('');\n        });\n    } else {\n      if (postId > 0) {\n        axios\n          .put('https://jsonplaceholder.typicode.com/posts/' + postId, {\n            id: postId,\n            title,\n            body,\n            userId: 1,\n          })\n          .then((response) => {\n            if (response) {\n              fetchData();\n              alert('UPdated');\n              onReset();\n            }\n          });\n      }\n    }\n  };\n  const onDeleteHandler = (id) => {\n    axios\n      .delete('https://jsonplaceholder.typicode.com/posts/' + id)\n      .then((response) => {\n        console.log(response.data);\n        if (response) {\n          fetchData();\n          alert('Deleted');\n        }\n      });\n  };\n  const onEditHandler = (postObject) => {\n    console.log(postObject);\n    setIsEditMode(true);\n    setTitle(postObject.title);\n   // setBody(postObject.body);\n    setPostId(postObject.id);\n    setSelectPostId(postObject.id);\n    setTitleEditMode(postObject,title);\n  };\n  const onReset = (event) => {\n    if (event) {\n      event.preventDefault();\n    }\n    setIsEditMode(false);\n    setTitle('');\n    setBody('');\n  };\n  return (\n    <>\n      <h2>Form HooksSample</h2>\n      <h2>Post Form</h2>\n\n      <form onSubmit={onFormSubmit}>\n        <label>Title</label>\n        <input name='title' value={title} onChange={onTitleChange}></input>\n\n        <label>Body</label>\n        <input name='body' value={body} onChange={onBodyChange}></input>\n        <button type='submit'>{isEditMode ? 'Update' : 'Submit'}</button>\n        {isEditMode && <button onClick={onReset}>Reset</button>}\n      </form>\n\n      <table>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Title</th>\n            <th>Body</th>\n            <th>Options</th>\n          </tr>\n        </thead>\n        <tbody>\n          {postsList.map((post, index) => {\n            return (\n              <tr key={post.id}>\n                <td>{post.id}</td>\n                <td>\n                  {selectPostId === post.id ? (\n                    <input value={titleEditMode} onChange={onTitleEditModeChange} />\n                  ) : (\n                    post.title\n                  )}\n                </td>\n                <td>\n                  {selectPostId === post.id ? (\n                    <input value={body} onChange={onBodyChange} />\n                  ) : (\n                    post.body\n                  )}\n                </td>\n               \n                <td>\n                  <button\n                    onClick={() => {\n                      onDeleteHandler(post.id);\n                    }}\n                  >\n                    Delete\n                  </button>\n                  <button\n                    onClick={() => {\n                      onEditHandler(post);\n                    }}\n                  >\n                    Edit\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};"]},"metadata":{},"sourceType":"module"}