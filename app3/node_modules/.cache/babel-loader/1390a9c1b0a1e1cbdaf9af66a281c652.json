{"ast":null,"code":"var _jsxFileName = \"/home/rajan/Desktop/React/app3/src/UseEffectExample.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, userState } from \"react\";\nimport { useState } from \"react/cjs/react.development\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const [value, setValue] = useState(0);\n  const [newvalue, setnewValue] = useState(0);\n\n  const onClickHandler = () => {\n    setValue(value + 1);\n  };\n\n  const onNewValueClickHandler = () => {\n    setNewValue(value + 1);\n  }; //useEffect(()=>{\n  //    console.log(\"render\");\n  // })\n\n\n  useEffect(() => {\n    console.log(\"renderd\");\n  }, []); //execute bonly once after component is renderd\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Use effect Example component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Value:\", value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onAuxClick: onClickHandler,\n      children: \"Click Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true);\n}, \"FTGwyMULxWEOWc7yAZCCei2pcOE=\");","map":{"version":3,"sources":["/home/rajan/Desktop/React/app3/src/UseEffectExample.js"],"names":["useEffect","userState","useState","value","setValue","newvalue","setnewValue","onClickHandler","onNewValueClickHandler","setNewValue","console","log"],"mappings":";;;AAAA,SAAQA,SAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAASC,QAAT,QAAyB,6BAAzB;;;AACA,kBAAe,MAAI;AAAA;;AACf,QAAK,CAACC,KAAD,EAAOC,QAAP,IAAiBF,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAK,CAACG,QAAD,EAAUC,WAAV,IAAuBJ,QAAQ,CAAC,CAAD,CAApC;;AACA,QAAMK,cAAc,GAAC,MAAI;AACrBH,IAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AACH,GAFD;;AAGA,QAAMK,sBAAsB,GAAC,MAAI;AAC7BC,IAAAA,WAAW,CAACN,KAAK,GAAC,CAAP,CAAX;AACH,GAFD,CANe,CASf;AACA;AACD;;;AACCH,EAAAA,SAAS,CAAC,MAAI;AACVU,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,GAFQ,EAEP,EAFO,CAAT,CAZe,CAcT;;AAEN,sBACI;AAAA,4BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAA,2BAAYR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG,eAGH;AAAQ,MAAA,UAAU,EAAEI,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHG;AAAA,kBADJ;AAOH,CAvBD","sourcesContent":["import {useEffect,userState} from \"react\";\nimport { useState } from \"react/cjs/react.development\";\nexport default ()=>{\n    const[value,setValue]=useState(0);\n    const[newvalue,setnewValue]=useState(0);\n    const onClickHandler=()=>{\n        setValue(value+1);\n    };\n    const onNewValueClickHandler=()=>{\n        setNewValue(value+1);\n    };\n    //useEffect(()=>{\n    //    console.log(\"render\");\n   // })\n    useEffect(()=>{\n        console.log(\"renderd\");\n    },[]);//execute bonly once after component is renderd\n\n    return(\n        <>\n     <h1>Use effect Example component</h1>\n     <div>Value:{value}</div>\n     <button onAuxClick={onClickHandler}>Click Me</button>\n        </>\n    );\n};"]},"metadata":{},"sourceType":"module"}