{"ast":null,"code":"var _jsxFileName = \"/home/rajan/Desktop/React/app3/src/HooksSample.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const [postList, setPostlist] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = () => {\n    axios.get(\"https://jsonplaceholder.typicode.com/posts\").then(response => {\n      if (response && response.data) {\n        setPostlist(response.data);\n      }\n\n      ;\n    });\n  };\n\n  const onTitleChange = event => {\n    setTitle(event.target.value);\n  };\n\n  const onBodyChange = event => {\n    setBody(event.target.value);\n  };\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n    console.log(title, body);\n  };\n\n  axios.get(\"https://jsonplaceholder.typicode.com/posts\", {\n    title,\n    body,\n    userId: 1\n  }).then(response => {\n    console.log(response);\n    alert(\"Added\");\n    fetchData(\"\");\n    setTitle(\"\");\n    setBody(\"\");\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" From HookSample \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Post Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onFormSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Id \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Title \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Body\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: postList.map((post, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", post.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: post.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 5\n            }, this)]\n          }, post.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 5\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}, \"0uERsq3Gl3BicPmlBEBmzECHzN0=\");","map":{"version":3,"sources":["/home/rajan/Desktop/React/app3/src/HooksSample.js"],"names":["axios","useEffect","useState","postList","setPostlist","title","setTitle","body","setBody","fetchData","get","then","response","data","onTitleChange","event","target","value","onBodyChange","onFormSubmit","preventDefault","console","log","userId","alert","map","post","index","id"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useEffect ,useState} from \"react\";\n\nexport default () => {\n    const [postList, setPostlist] = useState([]);\n    const [title, setTitle]=useState(\"\");\n    const [body,setBody]=useState(\"\");\n    useEffect (() =>{\n        fetchData();\n    },[]);\n    const fetchData =()=>{\n    axios.get(\"https://jsonplaceholder.typicode.com/posts\").then((response) =>{\n\n    if (response && response.data) {\n    setPostlist(response.data);\n    };\n    })\n    };\n    const onTitleChange =(event)=>{\n        setTitle(event.target.value);\n    }\n    const onBodyChange =(event)=>{\n        setBody(event.target.value);\n    };\n    const onFormSubmit =(event)=>{\n        event.preventDefault();\n        console.log(title,body);\n    }\n    axios.get(\"https://jsonplaceholder.typicode.com/posts\",{\n        title,body,userId:1,\n    }).then((response)=>{\n        console.log(response);\n        alert(\"Added\")\n         fetchData(\"\");\n         setTitle(\"\");\n         setBody(\"\");\n    })\n\n    \n    return (\n    <>\n    <h1> From HookSample </h1>\n    <h2>Post Form</h2>\n    <form onSubmit={onFormSubmit}>\n<label> Title</label>\n    </form>\n    <table>\n    <thead>\n    <tr>\n    <th> Id </th>\n    <th> Title </th>\n    <th>Body</th>\n    </tr>\n    </thead>\n    <tbody>\n    {postList.map((post, index) =>{\n    return(\n    <tr key={post.id}>\n    <td> {post.id}</td>\n    <td>{post.title}</td>\n    <td>{post.body}</td>\n    </tr>\n    )\n    })}\n    </tbody>\n    </table>\n    </>\n    )\n}\n    "]},"metadata":{},"sourceType":"module"}