{"ast":null,"code":"var _jsxFileName = \"/home/rajan/Desktop/React/app3/src/HookSamp.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const [postList, setPostList] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [postObject, setPostObject] = useState(\"\");\n  const [isEditMode, setEditMode] = useState(false);\n  const [postId, setPostId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(-1);\n  const [nameEditMode, setNameEditMode] = useState(\"\");\n  const [emailEdit, setEmailEditMode] = useState(\"\");\n  const [editObject, setEditObject] = useState({\n    name: \"\",\n    email: \"\"\n  });\n  useEffect(() => {\n    //code to fetch deta from server\n    fetchData();\n  }, []);\n\n  const fetchData = () => {\n    //code to fetch data from server\n    axios.get(\"https://jsonplaceholder.typicode.com/users\").then(response => {\n      console.log(response.data);\n\n      if (response && response.data) {\n        setPostList(response.data);\n      }\n    });\n  };\n\n  const onResetEditRow = () => {\n    setSelectedPostId(-1);\n    setEditObject({\n      name: \"\",\n      email: \"\"\n    });\n  };\n\n  const onUpdateClickRow = () => {\n    if (selectedPostId > 0) {\n      axios.put(\"https://jsonplaceholder.typicode.com/users/\" + selectedPostId, {\n        id: selectedPostId,\n        // name,\n        // email,\n        ...editObject,\n        userId: 1\n      }).then(response => {\n        if (response) {\n          fetchData();\n          alert(\"updated\");\n          onRest();\n        }\n      });\n    } // }\n\n\n    onResetEditRow();\n  }; //  const onTitleChange =(event) =>{\n  //      setTitle(event.target.value);\n  //  };\n  //  const onBodyChange =(event) =>{\n  //     setBody(event.target.value);\n  // };\n  // const onDelete =(event) =>{\n  //     setBody(event.target.value);\n  // };\n  // const onTitleEditMode =(event) =>{\n  //     setTitleEditMode(event.target.value);\n  // };\n\n\n  const onEmailEditMode = event => {\n    setEmailEditMode(event.target.value);\n  };\n\n  const onEditObjectChangeHandler = event => {\n    //   const titleold={\n    //       name:\"a\",\n    //       email:\"b\",\n    //   };\n    //     const tileNew={\n    //         title:titleold.title,\n    //         body:titleold.body,\n    //         ...titleold,\n    //         title:\"c\",\n    //     };\n    if (event) {\n      const {\n        name,\n        value\n      } = event.target;\n      setEditObject({ ...editObject,\n        [name]: value\n      });\n    }\n\n    ;\n  };\n\n  const onPostObjectChangeHandler = event => {\n    if (event) {\n      const {\n        name,\n        value\n      } = event.target;\n      setPostObject({ ...postObject,\n        [name]: value\n      });\n    }\n  };\n\n  const onFromSubmit = event => {\n    event.preventDefault(); //what is\n    //  console.log(title,body);\n\n    if (!isEditMode) {\n      axios.post(\"https://jsonplaceholder.typicode.com/users\", { ...postObject,\n        userId: 1\n      }).then(response => {\n        console.log(response);\n        alert(\"Added\"); //fetch the data again\n\n        fetchData(); //reset form\n        // setTitle(\"\");\n        // setBody(\"\");\n\n        setPostObject({\n          name: \"\",\n          email: \"\"\n        });\n      });\n    } //else{\n    // if(postId >0){\n    //     axios.put(\"https://jsonplaceholder.typicode.com/posts/\"+postId,{\n    //         id:postId,\n    //         // title,\n    //         // body,\n    //         ...postObject,\n    //         userId:1,\n    //     }).then((response) =>{\n    //         if(response){\n    //             fetchData();\n    //             alert(\"updated\");\n    //             onRest();\n    //         }\n    //         });\n    //     }\n    // }\n\n  };\n\n  const onDeleteHandler = id => {\n    axios.delete(\"https://jsonplaceholder.typicode.com/users/\" + id).then(response => {\n      console.log(response);\n      alert(\"Deleted\");\n      fetchData();\n    });\n  };\n\n  const onEdit = postObject => {\n    console.log(postObject); //   setEditMode(true);\n    //   setTitle(postObject.title);\n    //   setBody(postObject.body);\n    //   setPostId(postObject.id);\n\n    setSelectedPostId(postObject.id); //   setTitleEditMode(postObject.title);\n    //   setBodyEditMode(postObject.body);\n\n    setEditObject({ ...postObject\n    });\n  };\n\n  const onRest = event => {\n    if (event) {\n      event.preventDefault();\n    }\n\n    setEditMode(false);\n    setPostObject({\n      name: \"\",\n      email: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"From HookSample\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Post From\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onFromSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        value: postObject.name,\n        onChange: onPostObjectChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        value: postObject.email,\n        onChange: onPostObjectChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isEditMode ? \"update\" : \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 16\n      }, this), isEditMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onRest,\n        children: \"Rest:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: postList.map((post, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: post.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedPostId === post.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"name\",\n                value: editObject.name,\n                onChange: onEditObjectChangeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 63\n              }, this) : post.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedPostId === post.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"email\",\n                value: editObject.email,\n                onChange: onEditObjectChangeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 63\n              }, this) : post.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedPostId === post.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: onUpdateClickRow,\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 35\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: onResetEditRow,\n                  children: \"Reset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 34\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => onDeleteHandler(post.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 34\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    onEdit(post);\n                  },\n                  children: \"Edit:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 34\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 30\n            }, this)]\n          }, post.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 26\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n}, \"01sAqrdUznruCfUlvIyxdNd3HFI=\");","map":{"version":3,"sources":["/home/rajan/Desktop/React/app3/src/HookSamp.js"],"names":["axios","useEffect","useState","postList","setPostList","name","setName","email","setEmail","postObject","setPostObject","isEditMode","setEditMode","postId","setPostId","selectedPostId","setSelectedPostId","nameEditMode","setNameEditMode","emailEdit","setEmailEditMode","editObject","setEditObject","fetchData","get","then","response","console","log","data","onResetEditRow","onUpdateClickRow","put","id","userId","alert","onRest","onEmailEditMode","event","target","value","onEditObjectChangeHandler","onPostObjectChangeHandler","onFromSubmit","preventDefault","post","onDeleteHandler","delete","onEdit","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEC,kBAAe,MAAK;AAAA;;AAChB,QAAK,CAACC,QAAD,EAAUC,WAAV,IAAuBF,QAAQ,CAAC,EAAD,CAApC;AACC,QAAK,CAACG,IAAD,EAAMC,OAAN,IAAeJ,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAK,CAACK,KAAD,EAAOC,QAAP,IAAiBN,QAAQ,CAAC,EAAD,CAA9B;AACD,QAAM,CAACO,UAAD,EAAYC,aAAZ,IAA2BR,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACS,UAAD,EAAYC,WAAZ,IAAyBV,QAAQ,CAAC,KAAD,CAAvC;AACA,QAAM,CAACW,MAAD,EAAQC,SAAR,IAAmBZ,QAAQ,CAAC,CAAD,CAAjC;AACA,QAAM,CAACa,cAAD,EAAgBC,iBAAhB,IAAmCd,QAAQ,CAAC,CAAC,CAAF,CAAjD;AACC,QAAK,CAACe,YAAD,EAAcC,eAAd,IAA+BhB,QAAQ,CAAC,EAAD,CAA5C;AACD,QAAM,CAACiB,SAAD,EAAWC,gBAAX,IAA6BlB,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAACmB,UAAD,EAAYC,aAAZ,IAA2BpB,QAAQ,CAAC;AACtCG,IAAAA,IAAI,EAAC,EADiC;AAEtCE,IAAAA,KAAK,EAAC;AAFgC,GAAD,CAAzC;AAMAN,EAAAA,SAAS,CAAC,MAAK;AACZ;AACDsB,IAAAA,SAAS;AACV,GAHQ,EAGP,EAHO,CAAT;;AAMA,QAAMA,SAAS,GAAE,MAAK;AAClB;AACAvB,IAAAA,KAAK,CAACwB,GAAN,CAAU,4CAAV,EAAwDC,IAAxD,CAA8DC,QAAD,IAAY;AACtEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;;AACA,UAAGH,QAAQ,IAAIA,QAAQ,CAACG,IAAxB,EAA6B;AACzBzB,QAAAA,WAAW,CAACsB,QAAQ,CAACG,IAAV,CAAX;AACH;AACJ,KALA;AAMH,GARD;;AAWA,QAAMC,cAAc,GAAE,MAAI;AACxBd,IAAAA,iBAAiB,CAAC,CAAC,CAAF,CAAjB;AACAM,IAAAA,aAAa,CAAC;AAACjB,MAAAA,IAAI,EAAC,EAAN;AACdE,MAAAA,KAAK,EAAC;AADQ,KAAD,CAAb;AAED,GAJD;;AAMA,QAAMwB,gBAAgB,GAAC,MAAI;AAE1B,QAAGhB,cAAc,GAAE,CAAnB,EAAqB;AACdf,MAAAA,KAAK,CAACgC,GAAN,CAAU,gDAA8CjB,cAAxD,EAAuE;AACpEkB,QAAAA,EAAE,EAAClB,cADiE;AAEnE;AACA;AAEA,WAAGM,UALgE;AAMnEa,QAAAA,MAAM,EAAC;AAN4D,OAAvE,EAOGT,IAPH,CAOSC,QAAD,IAAa;AACjB,YAAGA,QAAH,EAAY;AACRH,UAAAA,SAAS;AACTY,UAAAA,KAAK,CAAC,SAAD,CAAL;AACAC,UAAAA,MAAM;AACT;AACA,OAbL;AAcC,KAjBkB,CAkBxB;;;AACDN,IAAAA,cAAc;AACf,GApBD,CAvCgB,CA6DjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMO,eAAe,GAAGC,KAAD,IAAU;AAC7BlB,IAAAA,gBAAgB,CAACkB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhB;AACH,GAFD;;AAGE,QAAMC,yBAAyB,GAAGH,KAAD,IAAU;AACzC;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAGA,KAAH,EAAS;AACL,YAAK;AAACjC,QAAAA,IAAD;AAAMmC,QAAAA;AAAN,UAAaF,KAAK,CAACC,MAAxB;AACAjB,MAAAA,aAAa,CAAC,EACV,GAAGD,UADO;AAEV,SAAChB,IAAD,GAAOmC;AAFG,OAAD,CAAb;AAIH;;AAAA;AAIF,GAxBD;;AA0BA,QAAME,yBAAyB,GAAEJ,KAAD,IAAS;AACvC,QAAGA,KAAH,EAAS;AACL,YAAK;AAACjC,QAAAA,IAAD;AAAMmC,QAAAA;AAAN,UAAaF,KAAK,CAACC,MAAxB;AACA7B,MAAAA,aAAa,CAAC,EACV,GAAGD,UADO;AAEV,SAACJ,IAAD,GAAOmC;AAFG,OAAD,CAAb;AAIH;AAEF,GATD;;AAUF,QAAMG,YAAY,GAAGL,KAAD,IAAU;AACzBA,IAAAA,KAAK,CAACM,cAAN,GADyB,CACF;AAC5B;;AACI,QAAG,CAACjC,UAAJ,EAAe;AACfX,MAAAA,KAAK,CAAC6C,IAAN,CAAW,4CAAX,EAAwD,EACrD,GAAGpC,UADkD;AAEpDyB,QAAAA,MAAM,EAAC;AAF6C,OAAxD,EAGGT,IAHH,CAGSC,QAAD,IAAa;AACjBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAS,QAAAA,KAAK,CAAC,OAAD,CAAL,CAFiB,CAGjB;;AACAZ,QAAAA,SAAS,GAJQ,CAKjB;AACA;AACA;;AACAb,QAAAA,aAAa,CAAC;AACVL,UAAAA,IAAI,EAAC,EADK;AAEVE,UAAAA,KAAK,EAAC;AAFI,SAAD,CAAb;AAMH,OAjBD;AAkBF,KAtB4B,CAsB3B;AACH;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,GAxCD;;AA0CA,QAAMuC,eAAe,GAAGb,EAAD,IAAM;AAErBjC,IAAAA,KAAK,CAAC+C,MAAN,CAAa,gDAA8Cd,EAA3D,EAA+DR,IAA/D,CAAqEC,QAAD,IAAY;AAChFC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAS,MAAAA,KAAK,CAAC,SAAD,CAAL;AACAZ,MAAAA,SAAS;AACZ,KAJG;AAKP,GAPD;;AAQE,QAAMyB,MAAM,GAAGvC,UAAD,IAAe;AACzBkB,IAAAA,OAAO,CAACC,GAAR,CAAYnB,UAAZ,EADyB,CAE3B;AACA;AACA;AACA;;AACEO,IAAAA,iBAAiB,CAACP,UAAU,CAACwB,EAAZ,CAAjB,CANyB,CAO3B;AACA;;AACEX,IAAAA,aAAa,CAAC,EACV,GAAGb;AADO,KAAD,CAAb;AAGH,GAZD;;AAeA,QAAM2B,MAAM,GAAEE,KAAD,IAAU;AACnB,QAAIA,KAAJ,EAAU;AACNA,MAAAA,KAAK,CAACM,cAAN;AACD;;AACHhC,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,IAAAA,aAAa,CAAC;AACZL,MAAAA,IAAI,EAAC,EADO;AAEZE,MAAAA,KAAK,EAAC;AAFM,KAAD,CAAb;AAMH,GAXD;;AAYD,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAM,MAAA,QAAQ,EAAEoC,YAAhB;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAElC,UAAU,CAACJ,IAArC;AAA2C,QAAA,QAAQ,EAAEqC;AAArD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJH,eAKM;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,KAAK,EAAEjC,UAAU,CAACF,KAAtC;AAA6C,QAAA,QAAQ,EAAEmC;AAAvD;AAAA;AAAA;AAAA;AAAA,cALN,eAOM;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA,kBAAuB/B,UAAU,GAAG,QAAH,GAAc;AAA/C;AAAA;AAAA;AAAA;AAAA,cAPN,EAQOA,UAAU,iBAAI;AAAQ,QAAA,OAAO,EAAEyB,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARrB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA,eAaA;AAAO,MAAA,SAAS,EAAE,OAAlB;AAAA,8BACI;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAA,kBACKjC,QAAQ,CAAC8C,GAAT,CAAa,CAACJ,IAAD,EAAMK,KAAN,KAAe;AACzB,8BACI;AAAA,oCACI;AAAA,wBAAKL,IAAI,CAACZ;AAAV;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAKlB,cAAc,KAAG8B,IAAI,CAACZ,EAAtB,gBAA4B;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,KAAK,EAAEZ,UAAU,CAAChB,IAArC;AAA2C,gBAAA,QAAQ,EAAEoC;AAArD;AAAA;AAAA;AAAA;AAAA,sBAA5B,GAEDI,IAAI,CAACxC;AAFT;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAMI;AAAA,wBAAKU,cAAc,KAAG8B,IAAI,CAACZ,EAAtB,gBAA4B;AAAO,gBAAA,IAAI,EAAC,OAAZ;AAAoB,gBAAA,KAAK,EAAEZ,UAAU,CAACd,KAAtC;AAA6C,gBAAA,QAAQ,EAAEkC;AAAvD;AAAA;AAAA;AAAA;AAAA,sBAA5B,GACDI,IAAI,CAACtC;AADT;AAAA;AAAA;AAAA;AAAA,oBANJ,eAUI;AAAA,wBACKQ,cAAc,KAAG8B,IAAI,CAACZ,EAAtB,gBACC;AAAA,wCACD;AAAQ,kBAAA,OAAO,EAAEF,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADC,eAEF;AAAQ,kBAAA,OAAO,EAAED,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFE;AAAA,8BADD,gBAOD;AAAA,wCACA;AAAQ,kBAAA,OAAO,EAAE,MACjBgB,eAAe,CAACD,IAAI,CAACZ,EAAN,CADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,eAKA;AAAQ,kBAAA,OAAO,EAAE,MAAI;AACtBe,oBAAAA,MAAM,CAACH,IAAD,CAAN;AACD,mBAFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,oBAVJ;AAAA,aAASA,IAAI,CAACZ,EAAd;AAAA;AAAA;AAAA;AAAA,kBADJ;AAwCH,SAzCA;AADL;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAbA;AAAA,kBADJ;AAwEJ,CAtQA","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\"\n\n export default () =>{\n     const[postList,setPostList]=useState([]);\n      const[name,setName]=useState(\"\");\n      const[email,setEmail]=useState(\"\");\n     const [postObject,setPostObject]=useState(\"\");\n     const [isEditMode,setEditMode]=useState(false);\n     const [postId,setPostId]=useState(0);\n     const [selectedPostId,setSelectedPostId]=useState(-1);\n      const[nameEditMode,setNameEditMode]=useState(\"\");\n     const [emailEdit,setEmailEditMode]=useState(\"\");\n     const [editObject,setEditObject]=useState({\n         name:\"\",\n         email:\"\",\n     });\n\n\n     useEffect(() =>{\n        //code to fetch deta from server\n       fetchData();\n     },[]\n      \n     );\n     const fetchData =() =>{\n         //code to fetch data from server\n         axios.get(\"https://jsonplaceholder.typicode.com/users\").then((response)=>{\n            console.log(response.data);\n            if(response && response.data){\n                setPostList(response.data);\n            }\n        });\n     };\n\n\n     const onResetEditRow =()=>{\n       setSelectedPostId(-1);\n       setEditObject({name:\"\",\n       email:\"\",})\n     }\n\n     const onUpdateClickRow=()=>{\n\n      if(selectedPostId >0){\n             axios.put(\"https://jsonplaceholder.typicode.com/users/\"+selectedPostId,{\n                id:selectedPostId,\n                 // name,\n                 // email,\n    \n                 ...editObject,\n                 userId:1,\n             }).then((response) =>{\n                 if(response){\n                     fetchData();\n                     alert(\"updated\");\n                     onRest();\n                 }\n                 });\n             }\n        // }\n       onResetEditRow();\n     }\n\n    //  const onTitleChange =(event) =>{\n    //      setTitle(event.target.value);\n    //  };\n    //  const onBodyChange =(event) =>{\n    //     setBody(event.target.value);\n    // };\n    // const onDelete =(event) =>{\n    //     setBody(event.target.value);\n    // };\n    // const onTitleEditMode =(event) =>{\n    //     setTitleEditMode(event.target.value);\n    // };\n\n    const onEmailEditMode =(event) =>{\n        setEmailEditMode(event.target.value);\n    };\n      const onEditObjectChangeHandler =(event) =>{\n        //   const titleold={\n        //       name:\"a\",\n        //       email:\"b\",\n        //   };\n\n        \n        //     const tileNew={\n        //         title:titleold.title,\n        //         body:titleold.body,\n        //         ...titleold,\n        //         title:\"c\",\n        //     };\n          \n        if(event){\n            const{name,value}=event.target;\n            setEditObject({\n                ...editObject,\n                [name]:value,\n            });\n        };\n\n\n\n      }\n\n      const onPostObjectChangeHandler=(event)=>{\n        if(event){\n            const{name,value}=event.target;\n            setPostObject({\n                ...postObject,\n                [name]:value,\n            });\n        }\n\n      };\n    const onFromSubmit =(event) =>{\n         event.preventDefault();//what is\n    //  console.log(title,body);\n        if(!isEditMode){\n        axios.post(\"https://jsonplaceholder.typicode.com/users\",{\n           ...postObject,\n            userId:1,\n        }).then((response) =>{\n            console.log(response);\n            alert(\"Added\");\n            //fetch the data again\n            fetchData();\n            //reset form\n            // setTitle(\"\");\n            // setBody(\"\");\n            setPostObject({\n                name:\"\",\n                email:\"\",\n\n\n            });\n        });\n     } //else{\n    // if(postId >0){\n    //     axios.put(\"https://jsonplaceholder.typicode.com/posts/\"+postId,{\n    //         id:postId,\n    //         // title,\n    //         // body,\n\n    //         ...postObject,\n    //         userId:1,\n    //     }).then((response) =>{\n    //         if(response){\n    //             fetchData();\n    //             alert(\"updated\");\n    //             onRest();\n    //         }\n    //         });\n    //     }\n    // }\n    }\n\n    const onDeleteHandler =(id)=>{\n        \n            axios.delete(\"https://jsonplaceholder.typicode.com/users/\"+id).then((response)=>{\n            console.log(response);\n            alert(\"Deleted\");\n            fetchData();\n        })\n    }\n      const onEdit =(postObject) =>{\n          console.log(postObject);\n        //   setEditMode(true);\n        //   setTitle(postObject.title);\n        //   setBody(postObject.body);\n        //   setPostId(postObject.id);\n          setSelectedPostId(postObject.id);\n        //   setTitleEditMode(postObject.title);\n        //   setBodyEditMode(postObject.body);\n          setEditObject({\n              ...postObject,\n          })\n      };\n      \n      \n      const onRest=(event) =>{\n          if (event){\n              event.preventDefault();\n            }\n          setEditMode(false);\n          setPostObject({\n            name:\"\",\n            email:\"\",\n\n\n        });\n      };\n     return(\n         <>\n         <h1>From HookSample</h1>\n         <h1>Post From</h1>\n         <form onSubmit={onFromSubmit}>\n         <label> Name: </label>\n             <input name=\"name\" value={postObject.name} onChange={onPostObjectChangeHandler}/>\n       \n            <label>Email: </label>\n               <input name=\"email\" value={postObject.email} onChange={onPostObjectChangeHandler}/>\n\n               <button type=\"submit\">{isEditMode ? \"update\" : \"submit\"}</button>\n               {isEditMode && <button onClick={onRest}>Rest:</button>}\n         </form>\n         <table className={\"table\"}>\n             <thead>\n                 <tr>\n                     <th>ID</th>\n                     <th>Name</th>\n                     <th>Email</th>\n                 </tr>\n                \n             </thead>\n             <tbody>\n                 {postList.map((post,index) =>{\n                     return(\n                         <tr key={post.id}>\n                             <td>{post.id}</td>\n                             <td>{selectedPostId===post.id ? (<input name=\"name\" value={editObject.name} onChange={onEditObjectChangeHandler}/>\n                             ):(\n                                 post.name\n                             )}</td>\n                             <td>{selectedPostId===post.id ? (<input name=\"email\" value={editObject.email} onChange={onEditObjectChangeHandler}/>):(\n                                 post.email\n                             )}\n                             </td>\n                             <td>\n                                 {selectedPostId===post.id ?\n                                  (<>\n                                  <button onClick={onUpdateClickRow}>Update</button>\n                                 <button onClick={onResetEditRow}>Reset</button>\n                                 </>\n                                 ) \n                                 :(\n                                 <>\n                                 <button onClick={()=>\n                                 onDeleteHandler(post.id)}>\n                                     Delete\n                                 </button>\n                                 <button onClick={()=>{\n                                onEdit(post)\n                              }}>Edit:</button>\n\n                                 \n                                 </>\n                                 )}\n                                 </td>\n                             {/* <button onClick={onDeleteHandler}>Delete:</button>\n                         \n                              <button onClick={()=>{\n                                onEdit(post)\n                              }}>Edit:</button>\n                              </tr> */}\n                              </tr>\n                     );\n                 })}\n             </tbody>\n         </table>\n         </>\n     );\n        \n    \n};"]},"metadata":{},"sourceType":"module"}