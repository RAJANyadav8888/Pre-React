{"ast":null,"code":"var _jsxFileName = \"/home/rajan/Desktop/React/app3/src/HooksSample.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const [postsList, setPostsList] = useState([]); //const [title, setTitle] = useState('');\n  //const [body, setBody] = useState('');\n\n  const [postObject, setPostObject] = useState({\n    title: \"\",\n    body: \"\"\n  });\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [titleEditMode, setTitleEditMode] = useState(\"\");\n  const [bodyEditMode, setBodyEditMode] = useState(\"\");\n  const [editObject, setEditObject] = useState({});\n  const [postId, setPostId] = useState(0);\n  const [selectPostId, setSelectPostId] = useState(-1);\n\n  const fetchData = () => {\n    //code TO fetch the datat from the server\n    axios.get('https://jsonplaceholder.typicode.com/posts').then(response => {\n      if (response && response.data) {\n        setPostsList(response.data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const onTitleEditModeChange = event => {\n    setTitleEditMode(event.target.value);\n  };\n\n  const onBodyEditModeChange = event => {\n    setBodyEditMode(event.target.value);\n  };\n\n  const onEditObjectChangeHandler = event => {\n    //const titlre id={\n    // title=\"a\";\n    //title=\"b\";\n    //  }\n    //const titlenew={\n    //title: title old.title,\n    //...old,title:\"c,\"\n    //}\n    if (event) {\n      const {\n        name,\n        value\n      } = event.target;\n      setEditObject({ ...editObject,\n        [name]: value\n      });\n    }\n  };\n\n  const onPostObjectChangeHandler = event => {\n    if (event) {\n      const {\n        name,\n        value\n      } = event.target;\n      setPostObject({ ...postObject,\n        [name]: value\n      });\n    }\n  };\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n    console.log(title, body);\n\n    if (!isEditMode) {\n      axios.post('https://jsonplaceholder.typicode.com/posts', { // title,\n        // body,\n        ...postObject,\n        userId: 1\n      }).then(response => {\n        console.log(response);\n        alert('Addded'); //fetch the data again\n\n        fetchData(); //reset form\n        // setTitle('');\n        // setBody('');\n      }); // } else {\n      //   if (postId > 0) {\n      //     axios\n      //       .put('https://jsonplaceholder.typicode.com/posts/' + postId, {\n      //         id: postId,\n      //        // title,\n      //         //body,\n      //         ...postObject,\n      //         userId: 1,\n      //       })\n      //       .then((response) => {\n      //         if (response) {\n      //           fetchData();\n      //           alert('UPdated');\n      //           onReset();\n      //         }\n      //       });\n      //   }\n    }\n  };\n\n  const onDeleteHandler = id => {\n    axios.delete('https://jsonplaceholder.typicode.com/posts/' + id).then(response => {\n      console.log(response.data);\n\n      if (response) {\n        fetchData();\n        alert('Deleted');\n      }\n    });\n  };\n\n  const onEditHandler = postObject => {\n    console.log(postObject);\n    setIsEditMode(true); // setTitle(postObject.title);\n    //  setBodyEditMode(postObject.body);\n    //setPostId(postObject.id);\n\n    setSelectPostId(postObject.id); //setTitleEditMode(postObject,title);\n\n    setSelectPostId({ ...postId\n    });\n    setEditObject({ ...postObject\n    });\n  };\n\n  const onReset = event => {\n    if (event) {\n      event.preventDefault();\n    }\n\n    setIsEditMode(false);\n    setTitle('');\n    setBody('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Form HooksSample\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Post Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"title\",\n        value: postObject.title,\n        onChange: onPostObjectChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"body\",\n        value: postObject.body,\n        onChange: onBodyChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isEditMode ? 'Update' : 'Submit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), isEditMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Body\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: postsList.map((post, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: post.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectPostId === post.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"title\",\n                value: editObject.title,\n                onChange: onEditObjectChangeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 21\n              }, this) : post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectPostId === post.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"body\",\n                value: editObject.body,\n                onChange: onEditObjectChangeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 21\n              }, this) : post.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  onDeleteHandler(post.id);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  onEditHandler(post);\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this)]\n          }, post.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}, \"SJS/Bf/ZM5QMZiS3+RrbWtpKe4s=\");","map":{"version":3,"sources":["/home/rajan/Desktop/React/app3/src/HooksSample.js"],"names":["axios","useEffect","useState","postsList","setPostsList","postObject","setPostObject","title","body","isEditMode","setIsEditMode","titleEditMode","setTitleEditMode","bodyEditMode","setBodyEditMode","editObject","setEditObject","postId","setPostId","selectPostId","setSelectPostId","fetchData","get","then","response","data","onTitleEditModeChange","event","target","value","onBodyEditModeChange","onEditObjectChangeHandler","name","onPostObjectChangeHandler","onFormSubmit","preventDefault","console","log","post","userId","alert","onDeleteHandler","id","delete","onEditHandler","onReset","setTitle","setBody","onBodyChange","map","index"],"mappings":"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","sourcesContent":["\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\n\nexport default () => {\n  const [postsList, setPostsList] = useState([]);\n  //const [title, setTitle] = useState('');\n  //const [body, setBody] = useState('');\n  const [postObject,setPostObject]=useState({\n      title:\"\",\n      body:\"\",\n  });\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [titleEditMode,setTitleEditMode]=useState(\"\");\n  const [bodyEditMode,setBodyEditMode]=useState(\"\");\n  const [editObject,setEditObject]=useState ({});\n\n  const [postId, setPostId] = useState(0);\n  const [selectPostId, setSelectPostId] = useState(-1);\n  const fetchData = () => {\n    //code TO fetch the datat from the server\n\n    axios.get('https://jsonplaceholder.typicode.com/posts').then((response) => {\n      if (response && response.data) {\n        setPostsList(response.data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  \n\n\n  const onTitleEditModeChange = (event) => {\n    setTitleEditMode(event.target.value);\n  };\n\n  const onBodyEditModeChange = (event) => {\n    setBodyEditMode(event.target.value);\n  };\n\n  const onEditObjectChangeHandler = (event) =>{\n      //const titlre id={\n         // title=\"a\";\n         //title=\"b\";\n    //  }\n    //const titlenew={\n        //title: title old.title,\n        //...old,title:\"c,\"\n    //}\n    if(event){\n        const {name,value}= event.target;\n        setEditObject({\n            ...editObject,\n            [name]:value,\n        });\n    }\n  }\n\n  const onPostObjectChangeHandler=(event) =>{\n    if(event){\n        const {name,value}= event.target;\n        setPostObject({\n            ...postObject,\n            [name]:value,\n        });\n    }\n  }\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    console.log(title, body);\n    if (!isEditMode) {\n      axios\n        .post('https://jsonplaceholder.typicode.com/posts', {\n         // title,\n         // body,\n         ...postObject,\n          userId: 1,\n        })\n        .then((response) => {\n          console.log(response);\n          alert('Addded');\n          //fetch the data again\n          fetchData();\n          \n          //reset form\n         // setTitle('');\n         // setBody('');\n        });\n    // } else {\n    //   if (postId > 0) {\n    //     axios\n    //       .put('https://jsonplaceholder.typicode.com/posts/' + postId, {\n    //         id: postId,\n    //        // title,\n    //         //body,\n    //         ...postObject,\n    //         userId: 1,\n    //       })\n    //       .then((response) => {\n    //         if (response) {\n    //           fetchData();\n    //           alert('UPdated');\n    //           onReset();\n    //         }\n    //       });\n    //   }\n    }\n  };\n  const onDeleteHandler = (id) => {\n    axios\n      .delete('https://jsonplaceholder.typicode.com/posts/' + id)\n      .then((response) => {\n        console.log(response.data);\n        if (response) {\n          fetchData();\n          alert('Deleted');\n        }\n      });\n  };\n  const onEditHandler = (postObject) => {\n    console.log(postObject);\n    setIsEditMode(true);\n   // setTitle(postObject.title);\n  //  setBodyEditMode(postObject.body);\n    //setPostId(postObject.id);\n    setSelectPostId(postObject.id);\n    //setTitleEditMode(postObject,title);\n    setSelectPostId({\n        ...postId,\n    })\n    setEditObject({\n        ...postObject,\n    });\n  };\n  const onReset = (event) => {\n    if (event) {\n      event.preventDefault();\n    }\n    setIsEditMode(false);\n    setTitle('');\n    setBody('');\n  };\n  return (\n    <>\n      <h2>Form HooksSample</h2>\n      <h2>Post Form</h2>\n\n      <form onSubmit={onFormSubmit}>\n        <label>Title</label>\n        <input name='title' value={postObject.title} onChange={onPostObjectChangeHandler}></input>\n\n        <label>Body</label>\n        <input name='body' value={postObject.body} onChange={onBodyChange}></input>\n        <button type='submit'>{isEditMode ? 'Update' : 'Submit'}</button>\n        {isEditMode && <button onClick={onReset}>Reset</button>}\n      </form>\n\n      <table>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Title</th>\n            <th>Body</th>\n            <th>Options</th>\n          </tr>\n        </thead>\n        <tbody>\n          {postsList.map((post, index) => {\n            return (\n              <tr key={post.id}>\n                <td>{post.id}</td>\n                <td>\n                  {selectPostId === post.id ? (\n                    <input \n                    name=\"title\"\n                    value={editObject.title} onChange={onEditObjectChangeHandler} />\n                  ) : (\n                    post.title\n                  )}\n                </td>\n                <td>\n                  {selectPostId === post.id ? (\n                    <input \n                    name=\"body\"\n                    value={editObject.body} onChange={onEditObjectChangeHandler} />\n                  ) : (\n                    post.body\n                  )}\n                </td>\n               \n                <td>\n                  <button\n                    onClick={() => {\n                      onDeleteHandler(post.id);\n                    }}\n                  >\n                    Delete\n                  </button>\n                  <button\n                    onClick={() => {\n                      onEditHandler(post);\n                    }}\n                  >\n                    Edit\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};"]},"metadata":{},"sourceType":"module"}