[{"/home/rajan/Desktop/React/app3/src/index.js":"1","/home/rajan/Desktop/React/app3/src/App.js":"2","/home/rajan/Desktop/React/app3/src/reportWebVitals.js":"3","/home/rajan/Desktop/React/app3/src/PersonContext.js":"4","/home/rajan/Desktop/React/app3/src/ContextConsumer.js":"5","/home/rajan/Desktop/React/app3/src/ContextConsumerChild.js":"6","/home/rajan/Desktop/React/app3/src/CodeSplitting.js":"7","/home/rajan/Desktop/React/app3/src/NavComponent.js":"8","/home/rajan/Desktop/React/app3/src/Post.js":"9","/home/rajan/Desktop/React/app3/src/SampleError.js":"10","/home/rajan/Desktop/React/app3/src/ErrorBoundry.js":"11","/home/rajan/Desktop/React/app3/src/FragmentSample.js":"12","/home/rajan/Desktop/React/app3/src/ClassComponent.js":"13","/home/rajan/Desktop/React/app3/src/FunctionalComponent.js":"14","/home/rajan/Desktop/React/app3/src/OnlineOrders.js":"15","/home/rajan/Desktop/React/app3/src/OfflineOrder.js":"16","/home/rajan/Desktop/React/app3/src/withOrder.js":"17","/home/rajan/Desktop/React/app3/src/OnlineOrderChild.js":"18","/home/rajan/Desktop/React/app3/src/OnlineOrder.js":"19","/home/rajan/Desktop/React/app3/src/UseEffectExample.js":"20","/home/rajan/Desktop/React/app3/src/useMyLog.js":"21","/home/rajan/Desktop/React/app3/src/useUserStatus.js":"22","/home/rajan/Desktop/React/app3/src/PortalDemo.js":"23","/home/rajan/Desktop/React/app3/src/ProfilerDemo.js":"24","/home/rajan/Desktop/React/app3/src/RefParent.js":"25","/home/rajan/Desktop/React/app3/src/RefChild.js":"26","/home/rajan/Desktop/React/app3/src/HooksSamples.js":"27","/home/rajan/Desktop/React/app3/src/HookSamp.js":"28"},{"size":631,"mtime":1638514556194,"results":"29","hashOfConfig":"30"},{"size":2037,"mtime":1639223268850,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1638428105184,"results":"32","hashOfConfig":"30"},{"size":260,"mtime":1638428624151,"results":"33","hashOfConfig":"30"},{"size":310,"mtime":1638428389848,"results":"34","hashOfConfig":"30"},{"size":617,"mtime":1638428752740,"results":"35","hashOfConfig":"30"},{"size":212,"mtime":1638514735972,"results":"36","hashOfConfig":"30"},{"size":1228,"mtime":1638514563454,"results":"37","hashOfConfig":"30"},{"size":3701,"mtime":1638514561234,"results":"38","hashOfConfig":"30"},{"size":198,"mtime":1638507910723,"results":"39","hashOfConfig":"30"},{"size":567,"mtime":1638513332306,"results":"40","hashOfConfig":"30"},{"size":280,"mtime":1638513326625,"results":"41","hashOfConfig":"30"},{"size":410,"mtime":1638847037850,"results":"42","hashOfConfig":"30"},{"size":987,"mtime":1638934835700,"results":"43","hashOfConfig":"30"},{"size":620,"mtime":1638933633384,"results":"44","hashOfConfig":"30"},{"size":490,"mtime":1638853042813,"results":"45","hashOfConfig":"30"},{"size":345,"mtime":1638852963601,"results":"46","hashOfConfig":"30"},{"size":200,"mtime":1638933630980,"results":"47","hashOfConfig":"30"},{"size":740,"mtime":1638934006687,"results":"48","hashOfConfig":"30"},{"size":1192,"mtime":1638941349331,"results":"49","hashOfConfig":"30"},{"size":178,"mtime":1638939364138,"results":"50","hashOfConfig":"30"},{"size":170,"mtime":1638941168601,"results":"51","hashOfConfig":"30"},{"size":180,"mtime":1639029977066,"results":"52","hashOfConfig":"30"},{"size":428,"mtime":1639027480275,"results":"53","hashOfConfig":"30"},{"size":415,"mtime":1639030728229,"results":"54","hashOfConfig":"30"},{"size":158,"mtime":1639030517051,"results":"55","hashOfConfig":"30"},{"size":7912,"mtime":1639222927577,"results":"56","hashOfConfig":"30"},{"size":7921,"mtime":1639218220340,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"301pe9",{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"60"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"60"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"60"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"60"},"/home/rajan/Desktop/React/app3/src/index.js",[],["134","135"],"/home/rajan/Desktop/React/app3/src/App.js",["136","137","138"],"/home/rajan/Desktop/React/app3/src/reportWebVitals.js",[],"/home/rajan/Desktop/React/app3/src/PersonContext.js",["139"],"import React,{Component} from \"react\";\n\n//create a new context\nconst PersonContext=React.createContext();\n\n//provider\nconst PersonProvider=PersonContext.Provider;\n\n//consumer\nconst PersonConsumer=PersonContext.Consumer;\n\nexport {PersonProvider,PersonConsumer};","/home/rajan/Desktop/React/app3/src/ContextConsumer.js",[],"/home/rajan/Desktop/React/app3/src/ContextConsumerChild.js",[],"/home/rajan/Desktop/React/app3/src/CodeSplitting.js",[],["140","141"],"/home/rajan/Desktop/React/app3/src/NavComponent.js",["142"],"import React, {Component} from \"react\";\nimport {Link} from 'react-router-dom';\nexport default class NavComponent extends Component{\n    render(){\n        return(\n       \n       <>\n            <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li class=\"nav-item\">\n          <Link class=\"nav-link active\" aria-current=\"page\" to={\"/post\"}></Link>\n        </li>\n        <li class=\"nav-item\">\n          <Link class=\"nav-link\" to={\"/todo\"}>ToDo</Link>\n        </li>\n        <li class=\"nav-item\">\n          <Link class=\"nav-link\" to={\"/posts\"}>Posts</Link>\n        </li>\n        <li class=\"nav-item\">\n          <Link class=\"nav-link\" to={\"/user\"}>User</Link>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n       </>\n        );\n    }\n\n\n}","/home/rajan/Desktop/React/app3/src/Post.js",["143"],"import axios, { Axios } from \"axios\";\nimport React,{Component} from \"react\";\nexport default class Post extends Component{\n    state={\n        posts:[],\n        isEditMode:false,\n        postObject:{\n            title:\"\",\n            body:\"\",\n            userId:1,\n        },\n    }\n    onDeleteClickHandler=(id)=>{\n        axios.delete(\"https://jsonplaceholder.typicode.com/posts/\" +id).then((response)=>{\n            console.log(response);\n            this.fetchData();\n            alert(\"Deleted\");\n        });\n    };\n    onEditClickHandler=(id)=>{\n        //get specific object by id from the list\n        const editObject= this.state.posts.find((post)=>post.id===id);\n\n        //set the object to state.postObject\n        this.setState({postObject:editObject, isEditMode: true})\n    };\n    onCancelClickHandler=(event)=>{\n        event.preventDefault();\n        this.setState({\n            postObject:{\n                title:\"\",\n                body:\"\",\n                userId:1,\n            },\n            isEditMode:false,\n        });\n\n    };\n    onChangeHandler=(event)=>{\n        const{name, value}=event.target;\n        const postObjectCopy=this.state.postObject;\n        postObjectCopy[name]=value;\n        this.setState({postObject:postObjectCopy})\n    }\n    onFormSubmitClick=(event)=>{\n        event.preventDefault();\n        console.log(this.state);\n\n        if(this.state.isEditMode){\n            //edit\n            axios.put(\"https://jsonplaceholder.typicode.com/posts/\" + this.state.postObject.id, this.state.postObject).then(\n                (response)=>{\n                    console.log(response);\n                    this.fetchData();\n                    alert(\"Updated\");\n                    this.resetState();\n                    \n                }\n            )\n        }else{\n            //save\n            axios.post(\"https://jsonplaceholder.typicode.com/posts\", this.state.postObject).then((response)=>{\n                console.log(response);\n                this.fetchData();\n                alert(\"Created\");\n                this.setState({postObject:{\n                    title:\"\",\n                    body:\"\",\n                }})\n            })\n\n        }\n\n        \n    }\n    \n    resetState() {\n        this.setState({\n            postObject: {\n                title: \"\",\n                body: \"\",\n                userId: 1,\n            },\n            isEditMode: false,\n        });\n    }\n\n    render(){\n        return(\n            <>\n            <h1>IN POST </h1>\n            <form onSubmit={this.onFormSubmitClick}>\n                <label>Title</label>\n                <input name=\"title\" value={this.state.postObject.title} onChange={this.onChangeHandler}></input>\n                <label>Body</label>\n                <input name=\"body\" value={this.state.postObject.body} onChange={this.onChangeHandler}></input>\n                <button type=\"submit\">{this.state.isEditMode? \"Update\" :\"Submit\"}</button>\n                <button onClick={this.onCancelClickHandler}>Cancel</button>\n            </form>\n            {this.state.posts.map((posts, index)=>(\n                <div key={index}><div>{index+1}.{posts.title}</div>\n                <button onClick={()=>{this.onDeleteClickHandler(posts.id)}}>Delete</button>\n                <button onClick={()=>{this.onEditClickHandler(posts.id)}}>Edit</button>\n                <br/>\n                </div>\n            ))}\n            </>\n        );\n    }\n    componentDidMount(){\n        this.fetchData();\n    }\n\n\n    fetchData() {\n        axios.get(\"https://jsonplaceholder.typicode.com/posts\").then((response) => {\n            console.log(response.data);\n            this.setState({ posts: response.data });\n\n        });\n    }\n}","/home/rajan/Desktop/React/app3/src/SampleError.js",["144"],"import React,{Component} from \"react\";\nexport default class  SampleError extends Component{\n    myArr=[1,2];\n\n    render(){\n        return<h1>in SampleError {this.myArr[5],toString()}</h1>;\n    }\n}\n","/home/rajan/Desktop/React/app3/src/ErrorBoundry.js",[],"/home/rajan/Desktop/React/app3/src/FragmentSample.js",[],"/home/rajan/Desktop/React/app3/src/ClassComponent.js",[],"/home/rajan/Desktop/React/app3/src/FunctionalComponent.js",["145","146"],"import {userState, useState} from \"react\";\nexport default () =>{\n    //const statearr=usestatte(0);\n\n    //const [value,setValue]=someArray;\n    //console.log(someArray);\n    //value:current Value\n    //setValue:callback to update the value\n    const [value,setValue]=useState(0);\n    const [newVlaue,setNewValue]=useState(0);\n    const onUpadateClickHandler =() =>{\n        setValue(value+1);\n\n    };\n\n    const onUpadateNewValueClickHandler=()=>{\n        setNewValue(newVlaue+1);\n    };\n    const onClickHandler=()=>{\n        setValue(value+1);\n\n    };\n    const onClickHandler1=()=>{\n        setValue(value-1);\n    }\n    return(\n        <>\n      \n       \n\n        <h2>Value:{value}</h2>\n        <button onClick={onUpadateClickHandler}>Update</button>\n        <button onClick={onUpadateNewValueClickHandler}>Update New value state</button>\n        <button  onClick={onClickHandler}>Increement</button>\n        <button  onClick={onClickHandler1}>Decrement</button>\n        </>\n    );\n};","/home/rajan/Desktop/React/app3/src/OnlineOrders.js",["147"],"import { useState } from \"react\";\nimport withOrder from \"./withOrder\";\nconst OnlineOrders =(props)=>{\n    console.log(props);\n    const status =[\n        \"Order Placed\",\n        \"Pending\",\n        \"Preparing\",\n        \"out for Delivery\",\n        \"Delivered\",\n    ];\n    //const [value ,setValue]=useState(0);\n    //const onClickHandler = ()=>{\n      //  setValue(value+1);\n    //};\n    return(\n        <>\n        <h1>Online order</h1>\n        <div>Current Status:{status[props.value]}</div>\n        <button onClick={props.onClickHandler}>Next Status</button>\n        </>\n    );\n};\nexport default withOrder(OnlineOrders);","/home/rajan/Desktop/React/app3/src/OfflineOrder.js",["148"],"import { useState } from \"react\";\nimport withOrder from \"./withOrder\";\nconst OfflineOrder=(props)=>{\n\n  const status=[\"Order Place\",\"Preparing\",\"Serving\",\"Bill Payment\"];\n // const [value,setValue]=useState(0);\n  //const onClickHandler=() =>{\n   //   setValue(value+1);\n // };\n  return(\n    <>\n    <h1>Offline order</h1>\n    <div>Current Status:{status[props.value]}</div>\n    <button onClick={props.onClickHandler}>Next Status</button>\n    </>\n);\n\n}\nexport default withOrder(OfflineOrder);","/home/rajan/Desktop/React/app3/src/withOrder.js",["149"],"import { useState } from \"react\";\nexport default(WrappedComponent) =>{\n    //return test component\n    return()=>{\n        const [value,setValue]=useState(0);\n        const onClickHandler =() =>{\n            setValue(value +1);\n\n        };\n        return <WrappedComponent value={value} onClickHandler={onClickHandler}/>\n\n        \n    };\n    \n};","/home/rajan/Desktop/React/app3/src/OnlineOrderChild.js",["150"],"export default(props) =>{\n    console.log(props);\n    return(\n        <>\n        <h1>In Child</h1>\n        <button onClick={props.onClickHandler}>Next status from child</button>\n        </>\n    );\n\n};","/home/rajan/Desktop/React/app3/src/OnlineOrder.js",["151"],"import React,{Component} from \"react\";\nimport { useState } from \"react\";\nimport OnlineOrderChild from \"./OnlineOrderChild\";\n//import withOrder from \"./withOrder\";\nconst OnlineOrder =(props)=>{\n    console.log(props);\n    const status =[\n        \"Order Placed\",\n        \"Pending\",\n        \"Preparing\",\n        \"out for Delivery\",\n        \"Delivered\",\n    ];\n    const [value ,setValue]=useState(0);\n    const onClickHandler = ()=>{\n       setValue(value+1);\n    };\n    return(\n        <>\n        <h1>Online order</h1>\n        <div>Current Status:{status[value]}</div>\n        <button onClick={onClickHandler}>Next Status</button>\n        <OnlineOrderChild onClickHandler={onClickHandler}/>\n        </>\n    );\n};\n\nexport  default OnlineOrder;","/home/rajan/Desktop/React/app3/src/UseEffectExample.js",["152","153","154","155"],"import {useEffect,userState} from \"react\";\nimport { useState } from \"react/cjs/react.development\";\nimport useMyLog from \"./useMyLog\";\nimport useUserStatus from \"./useUserStatus\";\nexport default ()=>{\n    const[value,setValue]=useState(0);\n    const[newvalue,setnewValue]=useState(0);\n   // useMyLog(value);\n    const userStatus=useUserStatus(value);\n    \n    const onClickHandler=()=>{\n        setValue(value+1);\n    };\n    const onNewValueClickHandler=()=>{\n        setnewValue(newvalue+1);\n    };\n    // useEffect(()=>{\n    //    console.log(\"render\");\n    // });\n    // //useEffect(()=>{\n    //    console.log(\"renderd\");\n     // },[]);//execute bonly once after component is renderd\n     \n    // useEffect(()=>{\n    //     console.log(\"value Updated\");\n    //     return()=>{\n    //         console.log(\"clean up\");\n    //     };\n    // },[value]);\n    \n    return(\n        <>\n     <h1>Use effect Example component</h1>\n     <div>User Status:{userStatus}</div>\n     <div>Value:{value}</div>\n     <div>NewVlaue:{newvalue}</div>\n     <button onClick={onClickHandler}>Click Me</button>\n     <button onClick={onNewValueClickHandler}>Click me to update new value</button>\n        </>\n    );\n};","/home/rajan/Desktop/React/app3/src/useMyLog.js",["156"],"import { useEffect } from \"react\";\nexport default(value) =>{\n    //useEffect\n    useEffect (()=>{\n        console.log(value);//API call to log it at server side \n    },[value])\n}","/home/rajan/Desktop/React/app3/src/useUserStatus.js",["157"],"export default (userId) => {\n    let status=\"Online\";\n    \n    if(userId%2===0){\n        status=\"online\";\n    }else{\n        status=\"offline\";\n    }\n    return status;\n};","/home/rajan/Desktop/React/app3/src/PortalDemo.js",["158"],"import { ReactDom } from \"react\";\nexport default () =>{\n    return ReactDom.createPortal(\n        <h1>In PORTAL DEMO</h1>,\n        document.getElementById(\"root-portal\")\n\n    );\n};","/home/rajan/Desktop/React/app3/src/ProfilerDemo.js",["159"],"import {Profiler,useState} from \"react\";\nexport default () =>{\n    const [value,setValue]=useState(\"\");\n    const onChangeHandler=(event) =>{\n        setValue(event.target.value);\n    };\n    return(\n        <>\n        <h1>In ProfilerDemo</h1>\n        <Profiler id={\"inputProfiler\"} onRender={(...args)=> console.log(args)}>\n            <input value={value} onChange={onChangeHandler} />\n        </Profiler>\n        </>\n    );\n};","/home/rajan/Desktop/React/app3/src/RefParent.js",["160"],"import React from \"react\";\nimport RefChild from \"./RefChild\";\n\nexport default () =>{\n    const inputRef =React.createRef();\n    const onButtonClickHandler = () => {\n        console.log(inputRef);\n        inputRef.current.focus();\n\n    };\n    return(\n        <>\n        <h1>In RefParent</h1>\n        <RefChild ref = {inputRef} />\n        <button onClick={onButtonClickHandler}>Click me</button>\n        </>\n    );\n};","/home/rajan/Desktop/React/app3/src/RefChild.js",[],"/home/rajan/Desktop/React/app3/src/HooksSamples.js",["161","162","163","164","165","166","167"],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\"\n\n\n\n\n export default () =>{\n    const[userList,setUserList]=useState([]);\n    // const[name,setName]=useState(\"\");\n    // const[userName,setUserName]=useState(\"\");\n    // const[email,setEmail]=useState(\"\");\n    const[userObject,setUserObject]=useState(\"\");\n    const[isEditMode,setEditMode]=useState(false);\n    const[userId,setUserId]=useState(0);\n    const[selectedUserId,setSelectedUserId]=useState(-1);\n     const[userNameEdit,setUserNameEditMode]=useState(\"\");\n     const[emailEdit,setEmailEditMode]=useState(\"\");\n     const[editObject,setEditObject]=useState({\n         name:\"\",\n         userName:\"\",\n         email:\"\",\n     })\n\n    useEffect(() =>{\n        //code to fetch deta from server\n       fetchData();\n     },[]\n      \n     );\n     const fetchData =() =>{\n        //code to fetch data from server\n        axios.get(\"https://jsonplaceholder.typicode.com/users\").then((response)=>{\n           console.log(response.data);\n           if(response && response.data){\n            setUserList(response.data);\n           }\n       });\n    };\n\n//     const onNameChange =(event) =>{\n//         setName(event.target.value);\n//     };\n//     const onUserNameChange =(event) =>{\n//         setUserName(event.target.value);\n//    };\n\n//    const onEmailChange =(event) =>{\n//     setEmail(event.target.value);\n// };\n\n// const onUserNameEditMode =() =>{\n//     setUserNameEditMode(event.target.value);\n// }\n\n// const onEmailEditMode =() =>{\n//     setEmailEditMode(event.target.value);\n// }\n\nconst onEditObjectChangeHandler =(event) =>{\n    if(event){\n        const{name,value}=event.target;\n        setEditObject({\n            ...editObject,\n            [name]:value,\n        });\n    };\n}\n\n const onUserObjectChangeHandler =(event) =>\n {\n     if(event){\n         const{name,value}=event.target;\n         setUserObject({\n             ...userObject,\n             [name]:value,\n         });\n     }\n};\nconst onDeleteHandler=(id)=>{\n   \n  \n    axios.delete(\"https://jsonplaceholder.typicode.com/users/\"+id).then((response) =>{\n        console.log(response.data);\n        alert(\"Deleted\");\n        //fetch the data again\n        fetchData();\n        //reset form\n        \n    });\n};\n\nconst onFromSubmit =(event) =>{\n    event.preventDefault();//what is\n    // console.log(name,userName,email);\n    if(!isEditMode){\n    axios.post(\"https://jsonplaceholder.typicode.com/users\",{\n        ...userObject,\n        \n        Id:1,\n    }).then((response) =>{\n        console.log(response);\n        alert(\"Added\");\n        //fetch the data again\n        fetchData();\n        //reset form\n        // setName(\"\");\n        // setUserName(\"\");\n        // setEmail(\"\");\n        setUserObject({\n            name:\"\",\n            userName:\"\",\n            email:\"\",\n        })\n    });\n}\n// else{\n//     if(userId >0){\n//        axios.put(\"https://jsonplaceholder.typicode.com/users/\"+userId,{\n//            id:userId,\n//            name,\n//         userName,\n//            userId:1,\n//        }).then((response) =>{\n//            if(response){\n//                fetchData();\n//                alert(\"updated\");\n//                onRest();\n//            }\n//            });\n//        }\n//     }\n    }\n    const onEdit =(userObject) =>{\n        console.log(userObject);\n    //     setEditMode(true);\n    //     setName(userObject.name);\n    //     setUserName(userObject.userName);\n    //     setEmail(userObject.email);\n    //    setUserId(userObject.id);\n    setSelectedUserId(userObject.id);\n\n    setEditObject({\n        ...userObject,\n    })\n       \n    };\n\n    const onRest=(event) =>{\n        if (event){\n            event.preventDefault();\n          }\n        setEditMode(false);\n        // setName(\"\");\n        // setUserName(\"\");\n        // setEmail(\"\");\n        setUserObject({\n            name:\"\",\n            userName:\"\",\n            email:\"\",\n        })\n    };\n\n    const onRestEditRow=()=>{\n        setSelectedUserId(-1);\n        setEditObject({\n            name:\"\",\n            userName:\"\",\n            email:\"\",\n        });\n    };\n\n const onUpdateResetRow=() =>{\n     if(selectedUserId>0)\n     {\n     axios.put(\"https://jsonplaceholder.typicode.com/users/\"+selectedUserId,{\n                   id:selectedUserId,\n                //    name,\n                // userName,\n                ...editObject,\n                   userId:1,\n               }).then((response) =>{\n                   if(response){\n                       fetchData();\n                       alert(\"updated\");\n                       onRestEditRow();\n                   }\n                   });\n               }\n            }\n        \n\n\nreturn(\n    <>\n    <h1>From HookSample</h1>\n    <h1>User From</h1>\n    <form onSubmit={onFromSubmit}>\n    <label> Name: </label>\n        <input name=\"name\" value={userObject.name} onChange={onUserObjectChangeHandler}/>\n  \n       <label>UserName: </label>\n          <input name=\"userName\" value={userObject.userName} onChange={onUserObjectChangeHandler}/>\n\n          <label>Email: </label>\n          <input name=\"email\" value={userObject.email} onChange={onUserObjectChangeHandler}/>\n          <button type=\"submit\">{isEditMode ? \"update\" : \"submit\"}</button>\n               {isEditMode && <button onClick={onRest}>Rest:</button>}\n    </form>\n    <table  class=\"table table-success table-striped\">\n        <thead>\n            <tr>\n                <th>ID</th>\n                <th>Name</th>\n                <th>UserName</th>\n                <th>Email</th>\n                {/* <th>City</th>\n                <th>lat</th>\n                <th>Option</th> */}\n               \n            </tr>\n           \n        </thead>\n        <tbody>\n            {userList.map((user,index) =>{\n                return(\n                    <tr key={user.id}>\n                        <td>{user.id}</td>\n                        <td>{selectedUserId===user.id ? (<input name=\"name\" value={editObject.name}\n                        onChange={onEditObjectChangeHandler}/>):(\n                            user.name)}</td>\n                        <td>{selectedUserId===user.id ? (<input name=\"userName\" value={editObject.userName}\n                        onChange={onEditObjectChangeHandler}/>):(\n                            user.username)}</td>\n                        <td>{selectedUserId===user.id ? (<input name=\"email\" value={editObject.email}\n                        onChange={onEditObjectChangeHandler}/>):(\n                            user.email)}</td>\n\n                             <td>\n                                 {selectedUserId===user.id ?\n                                  (<>\n                                  <button onClick={onUpdateResetRow}>Update</button>\n                                 <button onClick={onRestEditRow}>Reset</button>\n                                 </>\n                                 ) \n                                 :(\n                                 <>\n                                 <button onClick={()=>\n                                 onDeleteHandler(user.id)}>\n                                     Delete\n                                 </button>\n                                 <button onClick={()=>{\n                                onEdit(user)\n                              }}>Edit:</button>\n\n                                 \n                                 </>\n                                 )}\n                                 </td>\n\n                        {/* <td>{user.address.city}</td>\n                        <td>{user.address.geo.lat}</td> */}\n                        {/* <button onClick={onDeleteHandler}>Delete:</button>\n                        <button onClick={()=>{\n                                onEdit(user)\n                              }}>Edit:</button> */}\n                        </tr>\n                        \n                );\n            })}\n        </tbody>\n    </table>\n    </>\n);\n   \n\n\n }","/home/rajan/Desktop/React/app3/src/HookSamp.js",["168","169","170","171","172","173","174","175","176","177","178"],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\"\n\n export default () =>{\n     const[postList,setPostList]=useState([]);\n      const[name,setName]=useState(\"\");\n      const[email,setEmail]=useState(\"\");\n     const [postObject,setPostObject]=useState(\"\");\n     const [isEditMode,setEditMode]=useState(false);\n     const [postId,setPostId]=useState(0);\n     const [selectedPostId,setSelectedPostId]=useState(-1);\n      const[nameEditMode,setNameEditMode]=useState(\"\");\n     const [emailEdit,setEmailEditMode]=useState(\"\");\n     const [editObject,setEditObject]=useState({\n         name:\"\",\n         email:\"\",\n     });\n\n\n     useEffect(() =>{\n        //code to fetch deta from server\n       fetchData();\n     },[]\n      \n     );\n     const fetchData =() =>{\n         //code to fetch data from server\n         axios.get(\"https://jsonplaceholder.typicode.com/users\").then((response)=>{\n            console.log(response.data);\n            if(response && response.data){\n                setPostList(response.data);\n            }\n        });\n     };\n\n\n     const onResetEditRow =()=>{\n       setSelectedPostId(-1);\n       setEditObject({name:\"\",\n       email:\"\",})\n     }\n\n     const onUpdateClickRow=()=>{\n\n      if(selectedPostId >0){\n             axios.put(\"https://jsonplaceholder.typicode.com/users/\"+selectedPostId,{\n                id:selectedPostId,\n                 // name,\n                 // email,\n    \n                 ...editObject,\n                 userId:1,\n             }).then((response) =>{\n                 if(response){\n                     fetchData();\n                     alert(\"updated\");\n                     onRest();\n                 }\n                 });\n             }\n        // }\n       onResetEditRow();\n     }\n\n    //  const onTitleChange =(event) =>{\n    //      setTitle(event.target.value);\n    //  };\n    //  const onBodyChange =(event) =>{\n    //     setBody(event.target.value);\n    // };\n    // const onDelete =(event) =>{\n    //     setBody(event.target.value);\n    // };\n    // const onTitleEditMode =(event) =>{\n    //     setTitleEditMode(event.target.value);\n    // };\n\n    const onEmailEditMode =(event) =>{\n        setEmailEditMode(event.target.value);\n    };\n      const onEditObjectChangeHandler =(event) =>{\n        //   const titleold={\n        //       name:\"a\",\n        //       email:\"b\",\n        //   };\n\n        \n        //     const tileNew={\n        //         title:titleold.title,\n        //         body:titleold.body,\n        //         ...titleold,\n        //         title:\"c\",\n        //     };\n          \n        if(event){\n            const{name,value}=event.target;\n            setEditObject({\n                ...editObject,\n                [name]:value,\n            });\n        };\n\n\n\n      }\n\n      const onPostObjectChangeHandler=(event)=>{\n        if(event){\n            const{name,value}=event.target;\n            setPostObject({\n                ...postObject,\n                [name]:value,\n            });\n        }\n\n      };\n    const onFromSubmit =(event) =>{\n         event.preventDefault();//what is\n    //  console.log(title,body);\n        if(!isEditMode){\n        axios.post(\"https://jsonplaceholder.typicode.com/users\",{\n           ...postObject,\n            userId:1,\n        }).then((response) =>{\n            console.log(response);\n            alert(\"Added\");\n            //fetch the data again\n            fetchData();\n            //reset form\n            // setTitle(\"\");\n            // setBody(\"\");\n            setPostObject({\n                name:\"\",\n                email:\"\",\n\n\n            });\n        });\n     } //else{\n    // if(postId >0){\n    //     axios.put(\"https://jsonplaceholder.typicode.com/posts/\"+postId,{\n    //         id:postId,\n    //         // title,\n    //         // body,\n\n    //         ...postObject,\n    //         userId:1,\n    //     }).then((response) =>{\n    //         if(response){\n    //             fetchData();\n    //             alert(\"updated\");\n    //             onRest();\n    //         }\n    //         });\n    //     }\n    // }\n    }\n\n    const onDeleteHandler =(id)=>{\n        \n            axios.delete(\"https://jsonplaceholder.typicode.com/users/\"+id).then((response)=>{\n            console.log(response);\n            alert(\"Deleted\");\n            fetchData();\n        })\n    }\n      const onEdit =(postObject) =>{\n          console.log(postObject);\n        //   setEditMode(true);\n        //   setTitle(postObject.title);\n        //   setBody(postObject.body);\n        //   setPostId(postObject.id);\n          setSelectedPostId(postObject.id);\n        //   setTitleEditMode(postObject.title);\n        //   setBodyEditMode(postObject.body);\n          setEditObject({\n              ...postObject,\n          })\n      };\n      \n      \n      const onRest=(event) =>{\n          if (event){\n              event.preventDefault();\n            }\n          setEditMode(false);\n          setPostObject({\n            name:\"\",\n            email:\"\",\n\n\n        });\n      };\n     return(\n         <>\n         <h1>From HookSample</h1>\n         <h1>Post From</h1>\n         <form onSubmit={onFromSubmit}>\n         <label> Name: </label>\n             <input name=\"name\" value={postObject.name} onChange={onPostObjectChangeHandler}/>\n       \n            <label>Email: </label>\n               <input name=\"email\" value={postObject.email} onChange={onPostObjectChangeHandler}/>\n\n               <button type=\"submit\">{isEditMode ? \"update\" : \"submit\"}</button>\n               {isEditMode && <button onClick={onRest}>Rest:</button>}\n         </form>\n         <table className={\"table\"}>\n             <thead>\n                 <tr>\n                     <th>ID</th>\n                     <th>Name</th>\n                     <th>Email</th>\n                 </tr>\n                \n             </thead>\n             <tbody>\n                 {postList.map((post,index) =>{\n                     return(\n                         <tr key={post.id}>\n                             <td>{post.id}</td>\n                             <td>{selectedPostId===post.id ? (<input name=\"name\" value={editObject.name} onChange={onEditObjectChangeHandler}/>\n                             ):(\n                                 post.name\n                             )}</td>\n                             <td>{selectedPostId===post.id ? (<input name=\"email\" value={editObject.email} onChange={onEditObjectChangeHandler}/>):(\n                                 post.email\n                             )}\n                             </td>\n                             <td>\n                                 {selectedPostId===post.id ?\n                                  (<>\n                                  <button onClick={onUpdateClickRow}>Update</button>\n                                 <button onClick={onResetEditRow}>Reset</button>\n                                 </>\n                                 ) \n                                 :(\n                                 <>\n                                 <button onClick={()=>\n                                 onDeleteHandler(post.id)}>\n                                     Delete\n                                 </button>\n                                 <button onClick={()=>{\n                                onEdit(post)\n                              }}>Edit:</button>\n\n                                 \n                                 </>\n                                 )}\n                                 </td>\n                             {/* <button onClick={onDeleteHandler}>Delete:</button>\n                         \n                              <button onClick={()=>{\n                                onEdit(post)\n                              }}>Edit:</button>\n                              </tr> */}\n                              </tr>\n                     );\n                 })}\n             </tbody>\n         </table>\n         </>\n     );\n        \n    \n};",{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":1,"column":8,"nodeType":"185","messageId":"186","endLine":1,"endColumn":12},{"ruleId":"183","severity":1,"message":"187","line":5,"column":17,"nodeType":"185","messageId":"186","endLine":5,"endColumn":25},{"ruleId":"183","severity":1,"message":"188","line":26,"column":8,"nodeType":"185","messageId":"186","endLine":26,"endColumn":16},{"ruleId":"183","severity":1,"message":"189","line":1,"column":15,"nodeType":"185","messageId":"186","endLine":1,"endColumn":24},{"ruleId":"179","replacedBy":"190"},{"ruleId":"181","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":10,"column":5,"nodeType":"194","endLine":10,"endColumn":38},{"ruleId":"183","severity":1,"message":"195","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":22},{"ruleId":"196","severity":1,"message":"197","line":6,"column":48,"nodeType":"198","messageId":"199","endLine":6,"endColumn":49},{"ruleId":"183","severity":1,"message":"200","line":1,"column":9,"nodeType":"185","messageId":"186","endLine":1,"endColumn":18},{"ruleId":"201","severity":1,"message":"202","line":2,"column":1,"nodeType":"203","endLine":38,"endColumn":3},{"ruleId":"183","severity":1,"message":"204","line":1,"column":10,"nodeType":"185","messageId":"186","endLine":1,"endColumn":18},{"ruleId":"183","severity":1,"message":"204","line":1,"column":10,"nodeType":"185","messageId":"186","endLine":1,"endColumn":18},{"ruleId":"201","severity":1,"message":"202","line":2,"column":1,"nodeType":"203","endLine":15,"endColumn":3},{"ruleId":"201","severity":1,"message":"202","line":1,"column":1,"nodeType":"203","endLine":10,"endColumn":3},{"ruleId":"183","severity":1,"message":"189","line":1,"column":15,"nodeType":"185","messageId":"186","endLine":1,"endColumn":24},{"ruleId":"183","severity":1,"message":"205","line":1,"column":9,"nodeType":"185","messageId":"186","endLine":1,"endColumn":18},{"ruleId":"183","severity":1,"message":"200","line":1,"column":19,"nodeType":"185","messageId":"186","endLine":1,"endColumn":28},{"ruleId":"183","severity":1,"message":"206","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":16},{"ruleId":"201","severity":1,"message":"202","line":5,"column":1,"nodeType":"203","endLine":41,"endColumn":3},{"ruleId":"201","severity":1,"message":"202","line":2,"column":1,"nodeType":"203","endLine":7,"endColumn":2},{"ruleId":"201","severity":1,"message":"202","line":1,"column":1,"nodeType":"203","endLine":10,"endColumn":3},{"ruleId":"201","severity":1,"message":"202","line":2,"column":1,"nodeType":"203","endLine":8,"endColumn":3},{"ruleId":"201","severity":1,"message":"202","line":2,"column":1,"nodeType":"203","endLine":15,"endColumn":3},{"ruleId":"201","severity":1,"message":"202","line":4,"column":1,"nodeType":"203","endLine":18,"endColumn":3},{"ruleId":"201","severity":1,"message":"202","line":7,"column":2,"nodeType":"203","endLine":277,"endColumn":3},{"ruleId":"183","severity":1,"message":"207","line":14,"column":11,"nodeType":"185","messageId":"186","endLine":14,"endColumn":17},{"ruleId":"183","severity":1,"message":"208","line":14,"column":18,"nodeType":"185","messageId":"186","endLine":14,"endColumn":27},{"ruleId":"183","severity":1,"message":"209","line":16,"column":12,"nodeType":"185","messageId":"186","endLine":16,"endColumn":24},{"ruleId":"183","severity":1,"message":"210","line":16,"column":25,"nodeType":"185","messageId":"186","endLine":16,"endColumn":44},{"ruleId":"183","severity":1,"message":"211","line":17,"column":12,"nodeType":"185","messageId":"186","endLine":17,"endColumn":21},{"ruleId":"183","severity":1,"message":"212","line":17,"column":22,"nodeType":"185","messageId":"186","endLine":17,"endColumn":38},{"ruleId":"201","severity":1,"message":"202","line":4,"column":2,"nodeType":"203","endLine":266,"endColumn":3},{"ruleId":"183","severity":1,"message":"213","line":6,"column":13,"nodeType":"185","messageId":"186","endLine":6,"endColumn":17},{"ruleId":"183","severity":1,"message":"214","line":6,"column":18,"nodeType":"185","messageId":"186","endLine":6,"endColumn":25},{"ruleId":"183","severity":1,"message":"215","line":7,"column":13,"nodeType":"185","messageId":"186","endLine":7,"endColumn":18},{"ruleId":"183","severity":1,"message":"216","line":7,"column":19,"nodeType":"185","messageId":"186","endLine":7,"endColumn":27},{"ruleId":"183","severity":1,"message":"217","line":10,"column":13,"nodeType":"185","messageId":"186","endLine":10,"endColumn":19},{"ruleId":"183","severity":1,"message":"218","line":10,"column":20,"nodeType":"185","messageId":"186","endLine":10,"endColumn":29},{"ruleId":"183","severity":1,"message":"219","line":12,"column":13,"nodeType":"185","messageId":"186","endLine":12,"endColumn":25},{"ruleId":"183","severity":1,"message":"220","line":12,"column":26,"nodeType":"185","messageId":"186","endLine":12,"endColumn":41},{"ruleId":"183","severity":1,"message":"211","line":13,"column":13,"nodeType":"185","messageId":"186","endLine":13,"endColumn":22},{"ruleId":"183","severity":1,"message":"221","line":78,"column":11,"nodeType":"185","messageId":"186","endLine":78,"endColumn":26},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Suspense' is defined but never used.","'HookSamp' is defined but never used.","'Component' is defined but never used.",["222"],["223"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Axios' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'userState' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","'useEffect' is defined but never used.","'useMyLog' is defined but never used.","'userId' is assigned a value but never used.","'setUserId' is assigned a value but never used.","'userNameEdit' is assigned a value but never used.","'setUserNameEditMode' is assigned a value but never used.","'emailEdit' is assigned a value but never used.","'setEmailEditMode' is assigned a value but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'postId' is assigned a value but never used.","'setPostId' is assigned a value but never used.","'nameEditMode' is assigned a value but never used.","'setNameEditMode' is assigned a value but never used.","'onEmailEditMode' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]